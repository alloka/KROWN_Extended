window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"bench_executor.collector": {"fullname": "bench_executor.collector", "modulename": "bench_executor.collector", "kind": "module", "doc": "<p>This module holds the Collector class which is responsible for collecting\nmetrics during the execution of a case. It also collects hardware information\nfor provenance reasons when comparing results from cases.</p>\n\n<p>The following metrics are collected:</p>\n\n<p><strong>General</strong></p>\n\n<ul>\n<li><code>index</code>: incremental index for each collected sample.</li>\n<li><code>step</code>: Number of the step of a collected sample.</li>\n<li><code>timestamp</code>: The time when the sample was collected.</li>\n<li><code>version</code>: format version of the collected version, currently v2.</li>\n</ul>\n\n<p><strong>CPU</strong></p>\n\n<ul>\n<li><code>cpu_user</code>: CPU time spent in userspace.</li>\n<li><code>cpu_system</code>: CPU time spent in kernelspace.</li>\n<li><code>cpu_user_system</code>: sum of CPU time userspace and kernelspace.</li>\n<li><code>cpu_idle</code>: CPU time spent in idle mode.</li>\n<li><code>cpu_iowait</code>: Time that the CPU has to wait for IO operations to complete.</li>\n</ul>\n\n<p><strong>Memory</strong></p>\n\n<ul>\n<li><code>memory_ram</code>: Amount of RAM memory in use.</li>\n<li><code>memory_swap</code>: Amount of SWAP memory in use.</li>\n<li><code>memory_ram_swap</code>: Sum of the RAM and SWAP memory in use.</li>\n</ul>\n\n<p><strong>Disk</strong></p>\n\n<ul>\n<li><code>disk_read_count</code>: Number of disk reads.</li>\n<li><code>disk_write_count</code>: Number of disk writes.</li>\n<li><code>disk_read_bytes</code>: Number of bytes read from disk.</li>\n<li><code>disk_write_bytes</code>: Number of bytes written to disk.</li>\n<li><code>disk_read_time</code>: Time spent to read from disk.</li>\n<li><code>disk_write_time</code>: Time spent to write to disk.</li>\n<li><code>disk_busy_time</code>: Time that the disk is busy and all actions are pending.</li>\n</ul>\n\n<p><strong>Network</strong></p>\n\n<ul>\n<li><code>network_received_count</code>: Number of network packets received.</li>\n<li><code>network_sent_count</code>: Number of network packets sent.</li>\n<li><code>network_received_bytes</code>: Number of bytes received over network.</li>\n<li><code>network_sent_bytes</code>: Number of bytes sent over network.</li>\n<li><code>network_received_error</code>: Number of errors occured during receiving over\nnetwork.</li>\n<li><code>network_sent_error</code>: Number of errors occured during sending over network.</li>\n<li><code>network_received_drop</code>: Number of packets dropped during receiving over\nnetwork.</li>\n<li><code>network_sent_drop</code>: Number of packets dropped during sending over network.</li>\n</ul>\n"}, "bench_executor.collector.Collector": {"fullname": "bench_executor.collector.Collector", "modulename": "bench_executor.collector", "qualname": "Collector", "kind": "class", "doc": "<p>Collect metrics samples at a given interval for a run of a case.</p>\n"}, "bench_executor.collector.Collector.__init__": {"fullname": "bench_executor.collector.Collector.__init__", "modulename": "bench_executor.collector", "qualname": "Collector.__init__", "kind": "function", "doc": "<p>Create an instance of the Collector class.</p>\n\n<p>Instantiating this class will automatically generate a <code>case-info.txt</code>\nfile which describes the hardware used during collection of the\nmetrics. The file describes:</p>\n\n<ul>\n<li><strong>Case</strong>:\n<ul>\n<li>Timestamp when started.</li>\n<li>Directory of the case.</li>\n<li>Number of the run.</li>\n<li>Number of steps in a case.</li>\n</ul></li>\n<li><strong>Hardware</strong>:\n<ul>\n<li>CPU name.</li>\n<li>Number of CPU cores.</li>\n<li>Minimum and maximum CPU core frequency.</li>\n<li>Amount of RAM and SWAP memory</li>\n<li>Available disk storage.</li>\n<li>Available network interfaces and their link speed.</li>\n</ul></li>\n<li><strong>Docker</strong>:\n<ul>\n<li>Version of the Docker daemon</li>\n<li>Docker root directory</li>\n<li>Docker storage driver</li>\n<li>Docker CgroupFS driver and version</li>\n</ul></li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>results_run_path</strong> (str):\nPath to the results directory of the run currently being executed.</li>\n<li><strong>sample_interval</strong> (float):\nSample interval in seconds for collecting metrics.</li>\n<li><strong>number_of_steps</strong> (int):\nThe number of steps of the case that is being executed.</li>\n<li><strong>run_id</strong> (int):\nThe number of the run that is being executed.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">results_run_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sample_interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>,</span><span class=\"param\">\t<span class=\"n\">number_of_steps</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">run_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.collector.Collector.name": {"fullname": "bench_executor.collector.Collector.name", "modulename": "bench_executor.collector", "qualname": "Collector.name", "kind": "variable", "doc": "<p>Name of the class: Collector</p>\n"}, "bench_executor.collector.Collector.next_step": {"fullname": "bench_executor.collector.Collector.next_step", "modulename": "bench_executor.collector", "qualname": "Collector.next_step", "kind": "function", "doc": "<p>Increment the step number by one.</p>\n\n<p>The step number must always be equal or lower than the number of steps\nin the case.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.collector.Collector.stop": {"fullname": "bench_executor.collector.Collector.stop", "modulename": "bench_executor.collector", "qualname": "Collector.stop", "kind": "function", "doc": "<p>End metrics collection.</p>\n\n<p>Signal the metrics collection thread to stop collecting any metrics.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.collector.scputimes": {"fullname": "bench_executor.collector.scputimes", "modulename": "bench_executor.collector", "qualname": "scputimes", "kind": "class", "doc": "<p>scputimes()</p>\n", "bases": "builtins.tuple"}, "bench_executor.collector.scputimes.__init__": {"fullname": "bench_executor.collector.scputimes.__init__", "modulename": "bench_executor.collector", "qualname": "scputimes.__init__", "kind": "function", "doc": "<p>Create new instance of scputimes()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bench_executor.collector.sswap": {"fullname": "bench_executor.collector.sswap", "modulename": "bench_executor.collector", "qualname": "sswap", "kind": "class", "doc": "<p>sswap()</p>\n", "bases": "builtins.tuple"}, "bench_executor.collector.sswap.__init__": {"fullname": "bench_executor.collector.sswap.__init__", "modulename": "bench_executor.collector", "qualname": "sswap.__init__", "kind": "function", "doc": "<p>Create new instance of sswap()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bench_executor.collector.svmem": {"fullname": "bench_executor.collector.svmem", "modulename": "bench_executor.collector", "qualname": "svmem", "kind": "class", "doc": "<p>svmem()</p>\n", "bases": "builtins.tuple"}, "bench_executor.collector.svmem.__init__": {"fullname": "bench_executor.collector.svmem.__init__", "modulename": "bench_executor.collector", "qualname": "svmem.__init__", "kind": "function", "doc": "<p>Create new instance of svmem()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bench_executor.collector.sdiskio": {"fullname": "bench_executor.collector.sdiskio", "modulename": "bench_executor.collector", "qualname": "sdiskio", "kind": "class", "doc": "<p>sdiskio()</p>\n", "bases": "builtins.tuple"}, "bench_executor.collector.sdiskio.__init__": {"fullname": "bench_executor.collector.sdiskio.__init__", "modulename": "bench_executor.collector", "qualname": "sdiskio.__init__", "kind": "function", "doc": "<p>Create new instance of sdiskio()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bench_executor.collector.snetio": {"fullname": "bench_executor.collector.snetio", "modulename": "bench_executor.collector", "qualname": "snetio", "kind": "class", "doc": "<p>snetio()</p>\n", "bases": "builtins.tuple"}, "bench_executor.collector.snetio.__init__": {"fullname": "bench_executor.collector.snetio.__init__", "modulename": "bench_executor.collector", "qualname": "snetio.__init__", "kind": "function", "doc": "<p>Create new instance of snetio()</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bench_executor.container": {"fullname": "bench_executor.container", "modulename": "bench_executor.container", "kind": "module", "doc": "<p>This module holds the Container and ContainerManager classes. The Container\nclass is responsible for abstracting the Docker containers and allow running\ncontainers easily and make sure they are initialized before using them.\nThe Containermanager class allows to create container networks, list all\nrunning containers and stop them.</p>\n"}, "bench_executor.container.ContainerManager": {"fullname": "bench_executor.container.ContainerManager", "modulename": "bench_executor.container", "qualname": "ContainerManager", "kind": "class", "doc": "<p>Manage containers and networks.</p>\n"}, "bench_executor.container.ContainerManager.__init__": {"fullname": "bench_executor.container.ContainerManager.__init__", "modulename": "bench_executor.container", "qualname": "ContainerManager.__init__", "kind": "function", "doc": "<p>Creates an instance of the ContainerManager class.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "bench_executor.container.ContainerManager.list_all": {"fullname": "bench_executor.container.ContainerManager.list_all", "modulename": "bench_executor.container", "qualname": "ContainerManager.list_all", "kind": "function", "doc": "<p>List all available containers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.container.ContainerManager.stop_all": {"fullname": "bench_executor.container.ContainerManager.stop_all", "modulename": "bench_executor.container", "qualname": "ContainerManager.stop_all", "kind": "function", "doc": "<p>Stop all containers.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.container.ContainerManager.create_network": {"fullname": "bench_executor.container.ContainerManager.create_network", "modulename": "bench_executor.container", "qualname": "ContainerManager.create_network", "kind": "function", "doc": "<p>Create a container network.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the network</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.container.Container": {"fullname": "bench_executor.container.Container", "modulename": "bench_executor.container", "qualname": "Container", "kind": "class", "doc": "<p>Container abstracts a Docker container</p>\n\n<p>Abstract how to run a command in a container, start or stop a container,\nor retrieve logs. Also allow to wait for a certain log entry to appear or\nexit successfully.</p>\n"}, "bench_executor.container.Container.__init__": {"fullname": "bench_executor.container.Container.__init__", "modulename": "bench_executor.container", "qualname": "Container.__init__", "kind": "function", "doc": "<p>Creates an instance of the Container class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>container</strong> (str):\nContainer ID.</li>\n<li><strong>name</strong> (str):\nPretty name of the container.</li>\n<li><strong>logger</strong> (Logger):\nLogger class to use for container logs.</li>\n<li><strong>ports</strong> (dict):\nPorts mapping of the container onto the host.</li>\n<li><strong>volumes</strong> (list):\nVolumes mapping of the container onto the host.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">container</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">bench_executor</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Logger</span>,</span><span class=\"param\">\t<span class=\"n\">ports</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">environment</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span>,</span><span class=\"param\">\t<span class=\"n\">volumes</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[]</span></span>)</span>"}, "bench_executor.container.Container.started": {"fullname": "bench_executor.container.Container.started", "modulename": "bench_executor.container", "qualname": "Container.started", "kind": "variable", "doc": "<p>Indicates if the container is already started</p>\n", "annotation": ": bool"}, "bench_executor.container.Container.name": {"fullname": "bench_executor.container.Container.name", "modulename": "bench_executor.container", "qualname": "Container.name", "kind": "variable", "doc": "<p>The pretty name of the container</p>\n", "annotation": ": str"}, "bench_executor.container.Container.run": {"fullname": "bench_executor.container.Container.run", "modulename": "bench_executor.container", "qualname": "Container.run", "kind": "function", "doc": "<p>Run the container.</p>\n\n<p>This is used for containers which are long running to provide services\nsuch as a database or endpoint.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (str):\nThe command to execute in the container, optionally and defaults to\nno command.</li>\n<li><strong>detach</strong> (bool):\nIf the container may run in the background, default True.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether running the container was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>, </span><span class=\"param\"><span class=\"n\">detach</span><span class=\"o\">=</span><span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.container.Container.exec": {"fullname": "bench_executor.container.Container.exec", "modulename": "bench_executor.container", "qualname": "Container.exec", "kind": "function", "doc": "<p>Execute a command in the container.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (str):\nThe command to execute in the container.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the command was executed successfully or not.</li>\n<li><strong>logs</strong> (list):\nThe logs of the container for executing the command.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "bench_executor.container.Container.run_and_wait_for_log": {"fullname": "bench_executor.container.Container.run_and_wait_for_log", "modulename": "bench_executor.container", "qualname": "Container.run_and_wait_for_log", "kind": "function", "doc": "<p>Run the container and wait for a log line to appear.</p>\n\n<p>This blocks until the container's log contains the <code>log_line</code>.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>log_line</strong> (str):\nThe log line to wait for in the logs.</li>\n<li><strong>command</strong> (str):\nThe command to execute in the container, optionally and defaults to\nno command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the container exited with status code 0 or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">log_line</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.container.Container.run_and_wait_for_exit": {"fullname": "bench_executor.container.Container.run_and_wait_for_exit", "modulename": "bench_executor.container", "qualname": "Container.run_and_wait_for_exit", "kind": "function", "doc": "<p>Run the container and wait for exit</p>\n\n<p>This blocks until the container exit and gives a status code.</p>\n\n<p>Parameters</p>\n\n<hr />\n\n<p>command : str\n     The command to execute in the container, optionally and defaults to\n     no command.</p>\n\n<p>Returns</p>\n\n<hr />\n\n<p>success : bool\n     Whether the container exited with status code 0 or not.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.container.Container.stop": {"fullname": "bench_executor.container.Container.stop", "modulename": "bench_executor.container", "qualname": "Container.stop", "kind": "function", "doc": "<p>Stop a running container</p>\n\n<p>Stops the container and removes it, including its volumes.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether stopping the container was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.executor": {"fullname": "bench_executor.executor", "modulename": "bench_executor.executor", "kind": "module", "doc": "<p>This module holds the Executor class which is responsible for executing a case,\ncollecting metrics, and exposing this functionality to the CLI.\nAll features of this tool can be accessed through the Executor class, other\nclasses should not be used directly.</p>\n"}, "bench_executor.executor.Executor": {"fullname": "bench_executor.executor.Executor", "modulename": "bench_executor.executor", "qualname": "Executor", "kind": "class", "doc": "<p>Executor class executes a case.</p>\n"}, "bench_executor.executor.Executor.__init__": {"fullname": "bench_executor.executor.Executor.__init__", "modulename": "bench_executor.executor", "qualname": "Executor.__init__", "kind": "function", "doc": "<p>Create an instance of the Executor class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>main_directory</strong> (str):\nThe root directory of all the cases to execute.</li>\n<li><strong>verbose</strong> (bool):\nEnables verbose logs.</li>\n<li><strong>process_cb</strong> (function):\nCallback to call when a step is completed of the case. By default,\na dummy callback is provided if the argument is missing.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">main_directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">progress_cb</span><span class=\"o\">=&lt;</span><span class=\"n\">function</span> <span class=\"n\">_progress_cb</span><span class=\"o\">&gt;</span></span>)</span>"}, "bench_executor.executor.Executor.main_directory": {"fullname": "bench_executor.executor.Executor.main_directory", "modulename": "bench_executor.executor", "qualname": "Executor.main_directory", "kind": "variable", "doc": "<p>The main directory of all the cases.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>main_directory</strong> (str):\nThe path to the main directory of the cases.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.executor.Executor.stats": {"fullname": "bench_executor.executor.Executor.stats", "modulename": "bench_executor.executor", "qualname": "Executor.stats", "kind": "function", "doc": "<p>Generate statistics for a case.</p>\n\n<p>Generate statistics for an executed case. The case must be executed\nbefore to succeed.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>case</strong> (dict):\nThe case to generate statistics for.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the statistics are generated with success or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">case</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.executor.Executor.clean": {"fullname": "bench_executor.executor.Executor.clean", "modulename": "bench_executor.executor", "qualname": "Executor.clean", "kind": "function", "doc": "<p>Clean a case.</p>\n\n<p>Clean up all results and metrics for a case to start it fresh.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>case</strong> (dict):\nThe case to clean.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the cleaning of the case succeeded or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">case</span><span class=\"p\">:</span> <span class=\"nb\">dict</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.executor.Executor.run": {"fullname": "bench_executor.executor.Executor.run", "modulename": "bench_executor.executor", "qualname": "Executor.run", "kind": "function", "doc": "<p>Execute a case.</p>\n\n<p>Execute all steps of a case while collecting metrics and logs.\nThe metrics are collected at a given interval and for a specific run of\nthe case to allow multiple executions of the same case. Checkpoints of\nruns can be enabled to allow the executor to restart where it stopped\nin case of a failure, electricity blackout, etc.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>case</strong> (dict):\nThe case to execute.</li>\n<li><strong>interval</strong> (float):\nThe sample interval for the metrics collection.</li>\n<li><strong>run</strong> (int):\nThe run number of the case.</li>\n<li><strong>checkpoint</strong> (bool):\nEnable checkpoints after each run to allow restarts.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the case was executed successfully or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">case</span><span class=\"p\">:</span> <span class=\"nb\">dict</span>, </span><span class=\"param\"><span class=\"n\">interval</span><span class=\"p\">:</span> <span class=\"nb\">float</span>, </span><span class=\"param\"><span class=\"n\">run</span><span class=\"p\">:</span> <span class=\"nb\">int</span>, </span><span class=\"param\"><span class=\"n\">checkpoint</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.executor.Executor.list": {"fullname": "bench_executor.executor.Executor.list", "modulename": "bench_executor.executor", "qualname": "Executor.list", "kind": "function", "doc": "<p>List all cases in a root directory.</p>\n\n<p>Retrieve a list of all discovered valid cases in a given directory.\nCases which do not pass the validation, are excluded and their\nvalidation errors are reported through logging.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>cases</strong> (list):\nList of discovered cases.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">list</span>:</span></span>", "funcdef": "def"}, "bench_executor.fuseki": {"fullname": "bench_executor.fuseki", "modulename": "bench_executor.fuseki", "kind": "module", "doc": "<p>Apache Jena Fuseki is a SPARQL server. It can run as an operating system\nservice, as a Java web application (WAR file), and as a standalone server.</p>\n\n<p><strong>Website</strong>: <a href=\"https://jena.apache.org/documentation/fuseki2/\">https://jena.apache.org/documentation/fuseki2/</a></p>\n"}, "bench_executor.fuseki.Fuseki": {"fullname": "bench_executor.fuseki.Fuseki", "modulename": "bench_executor.fuseki", "qualname": "Fuseki", "kind": "class", "doc": "<p>Fuseki container for executing SPARQL queries.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.fuseki.Fuseki.__init__": {"fullname": "bench_executor.fuseki.Fuseki.__init__", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.__init__", "kind": "function", "doc": "<p>Creates an instance of the Fuseki class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.fuseki.Fuseki.initialization": {"fullname": "bench_executor.fuseki.Fuseki.initialization", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.initialization", "kind": "function", "doc": "<p>Initialize Fuseki's database.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the initialization was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"fullname": "bench_executor.fuseki.Fuseki.root_mount_directory", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for Fuseki.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for Fuseki.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.fuseki.Fuseki.headers": {"fullname": "bench_executor.fuseki.Fuseki.headers", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.headers", "kind": "variable", "doc": "<p>HTTP headers of SPARQL queries for serialization formats.</p>\n\n<p>Only supported serialization formats are included in the dictionary.\nCurrently, the following formats are supported:</p>\n\n<ul>\n<li>N-Triples</li>\n<li>Turtle</li>\n<li>CSV</li>\n<li>RDF/JSON</li>\n<li>RDF/XML</li>\n<li>JSON-LD</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>headers</strong> (dict):\nDictionary of headers to use for each serialization format.</li>\n</ul>\n", "annotation": ": Dict[str, Dict[str, str]]"}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"fullname": "bench_executor.fuseki.Fuseki.wait_until_ready", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.wait_until_ready", "kind": "function", "doc": "<p>Wait until Fuseki is ready to execute SPARQL queries.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (str):\nCommand to execute in the Fuseki container, optionally, defaults to\nno command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the Fuseki was initialized successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.fuseki.Fuseki.load": {"fullname": "bench_executor.fuseki.Fuseki.load", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.load", "kind": "function", "doc": "<p>Load an RDF file into Fuseki.</p>\n\n<p>Currently, only N-Triples files are supported.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rdf_file</strong> (str):\nName of the RDF file to load.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the loading was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rdf_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.fuseki.Fuseki.stop": {"fullname": "bench_executor.fuseki.Fuseki.stop", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.stop", "kind": "function", "doc": "<p>Stop Fuseki.</p>\n\n<p>Drops all triples in Fuseki before stopping its container.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether stopping Fuseki was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.fuseki.Fuseki.endpoint": {"fullname": "bench_executor.fuseki.Fuseki.endpoint", "modulename": "bench_executor.fuseki", "qualname": "Fuseki.endpoint", "kind": "variable", "doc": "<p>SPARQL endpoint URL</p>\n"}, "bench_executor.__init__": {"fullname": "bench_executor.__init__", "modulename": "bench_executor.__init__", "kind": "module", "doc": "<p>bench_executor module allows you to execute cases in multiple runs and\nautomatically collect metrics.</p>\n"}, "bench_executor.logger": {"fullname": "bench_executor.logger", "modulename": "bench_executor.logger", "kind": "module", "doc": "<p>This module contains the Logger class which is responsible for logging.\nThis class is a small wrapper around the Python logging module to automatically\nconfigure the loggers and handle unittest logging.</p>\n"}, "bench_executor.logger.Logger": {"fullname": "bench_executor.logger.Logger", "modulename": "bench_executor.logger", "qualname": "Logger", "kind": "class", "doc": "<p>Log messages to a log file and console.</p>\n"}, "bench_executor.logger.Logger.__init__": {"fullname": "bench_executor.logger.Logger.__init__", "modulename": "bench_executor.logger", "qualname": "Logger.__init__", "kind": "function", "doc": "<p>Creates an instance of the Logger class.</p>\n\n<p>During unittests, the <code>UNITTEST</code> environment variable is set which\ndisables the console logger.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nName of the logger</li>\n<li><strong>directory</strong> (str):\nThe path to the directory where the logs must be stored.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.logger.Logger.verbose": {"fullname": "bench_executor.logger.Logger.verbose", "modulename": "bench_executor.logger", "qualname": "Logger.verbose", "kind": "variable", "doc": "<p>Verbose logging enabled.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>verbose</strong> (bool):\nVerbose logging enabled or not.</li>\n</ul>\n", "annotation": ": bool"}, "bench_executor.logger.Logger.debug": {"fullname": "bench_executor.logger.Logger.debug", "modulename": "bench_executor.logger", "qualname": "Logger.debug", "kind": "function", "doc": "<p>Log a message with level DEBUG.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.logger.Logger.info": {"fullname": "bench_executor.logger.Logger.info", "modulename": "bench_executor.logger", "qualname": "Logger.info", "kind": "function", "doc": "<p>Log a message with level INFO.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.logger.Logger.warning": {"fullname": "bench_executor.logger.Logger.warning", "modulename": "bench_executor.logger", "qualname": "Logger.warning", "kind": "function", "doc": "<p>Log a message with level WARNING.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.logger.Logger.error": {"fullname": "bench_executor.logger.Logger.error", "modulename": "bench_executor.logger", "qualname": "Logger.error", "kind": "function", "doc": "<p>Log a message with level ERROR.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">msg</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "bench_executor.morphkgc": {"fullname": "bench_executor.morphkgc", "modulename": "bench_executor.morphkgc", "kind": "module", "doc": "<p>Morph-KGC is an engine that constructs RDF and RDF-star knowledge graphs\nfrom heterogeneous data sources with the R2RML, RML and RML-star mapping\nlanguages.</p>\n\n<p><strong>Website</strong>: <a href=\"https://morph-kgc.readthedocs.io/\">https://morph-kgc.readthedocs.io/</a><br>\n<strong>Repository</strong>: <a href=\"https://github.com/oeg-upm/morph-kgc\">https://github.com/oeg-upm/morph-kgc</a></p>\n"}, "bench_executor.morphkgc.MorphKGC": {"fullname": "bench_executor.morphkgc.MorphKGC", "modulename": "bench_executor.morphkgc", "qualname": "MorphKGC", "kind": "class", "doc": "<p>Morph-KGC container for executing R2RML, RML, and RML-star mappings.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.morphkgc.MorphKGC.__init__": {"fullname": "bench_executor.morphkgc.MorphKGC.__init__", "modulename": "bench_executor.morphkgc", "qualname": "MorphKGC.__init__", "kind": "function", "doc": "<p>Creates an instance of the MorphKGC class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"fullname": "bench_executor.morphkgc.MorphKGC.root_mount_directory", "modulename": "bench_executor.morphkgc", "qualname": "MorphKGC.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for Morph-KGC.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for Morph-KGC.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.morphkgc.MorphKGC.execute": {"fullname": "bench_executor.morphkgc.MorphKGC.execute", "modulename": "bench_executor.morphkgc", "qualname": "MorphKGC.execute", "kind": "function", "doc": "<p>Execute Morph-KGC with given arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arguments</strong> (list):\nArguments to supply to Morph-KGC.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution succeeded or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"fullname": "bench_executor.morphkgc.MorphKGC.execute_mapping", "modulename": "bench_executor.morphkgc", "qualname": "MorphKGC.execute_mapping", "kind": "function", "doc": "<p>Execute a mapping file with Morph-KGC.</p>\n\n<p>Morph-KGC can transform SQL relational databases (MySQL, PostgreSQL,\nOracle, Microsoft SQL Server, MariaDB, SQLite), tabular (CSV, TSV,\nExcel, Parquet, Feather, ORC, Stata, SAS, SPSS, ODS) and\nhierarchical files (JSON, XML).</p>\n\n<p>Morph-KGC currently only supports N-Quads and N-Triples in RDF and\nRDF-Star. RDF and RDF-Star output is done automatically, you can use\nthe same serialization format (<code>ntriples</code>, <code>nquads</code>) for both RDF\nand RDF-Star output.</p>\n\n<p>Morph-KGC can generate all triples in a single file or spread it\namong multiple files.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mapping_file</strong> (str):\nPath to the mapping file to execute.</li>\n<li><strong>output_file</strong> (str):\nName of the output file to store the triples in.</li>\n<li><strong>serialization</strong> (str):\nSerialization format to use.</li>\n<li><strong>rdb_username</strong> (Optional[str]):\nUsername for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_password</strong> (Optional[str]):\nPassword for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_host</strong> (Optional[str]):\nHostname for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_port</strong> (Optional[int]):\nPort for the database, required when a database is used as source.</li>\n<li><strong>rdb_name</strong> (Optional[str]):\nDatabase name for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_type</strong> (Optional[str]):\nDatabase type, required when a database is used as source.</li>\n<li><strong>multiple_files</strong> (bool):\nIf the generated triples must be stored in multiple files, default\na single file.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">serialization</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_username</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_password</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_host</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_port</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">multiple_files</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.morphrdb": {"fullname": "bench_executor.morphrdb", "modulename": "bench_executor.morphrdb", "kind": "module", "doc": "<p>Morph-RDB (formerly called ODEMapster) is an RDB2RDF engine developed by\nthe Ontology Engineering Group, which follows the R2RML specification.</p>\n\n<p><strong>Website</strong>: <a href=\"https://oeg.fi.upm.es/index.php/en/technologies/315-morph-rdb/index.html\">https://oeg.fi.upm.es/index.php/en/technologies/315-morph-rdb/index.html</a> <br>\n<strong>Repository</strong>: <a href=\"https://github.com/oeg-upm/morph-rdb\">https://github.com/oeg-upm/morph-rdb</a></p>\n"}, "bench_executor.morphrdb.MorphRDB": {"fullname": "bench_executor.morphrdb.MorphRDB", "modulename": "bench_executor.morphrdb", "qualname": "MorphRDB", "kind": "class", "doc": "<p>Morph-RDB container for executing R2RML mappings.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.morphrdb.MorphRDB.__init__": {"fullname": "bench_executor.morphrdb.MorphRDB.__init__", "modulename": "bench_executor.morphrdb", "qualname": "MorphRDB.__init__", "kind": "function", "doc": "<p>Creates an instance of the MorphRDB class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"fullname": "bench_executor.morphrdb.MorphRDB.root_mount_directory", "modulename": "bench_executor.morphrdb", "qualname": "MorphRDB.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for Morph-RDB.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for Morph-RDB.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.morphrdb.MorphRDB.execute": {"fullname": "bench_executor.morphrdb.MorphRDB.execute", "modulename": "bench_executor.morphrdb", "qualname": "MorphRDB.execute", "kind": "function", "doc": "<p>Execute Morph-KGC with the given arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arguments</strong> (list):\nAdditional arguments to supply to Morph-KGC.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution succeeded or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"fullname": "bench_executor.morphrdb.MorphRDB.execute_mapping", "modulename": "bench_executor.morphrdb", "qualname": "MorphRDB.execute_mapping", "kind": "function", "doc": "<p>Execute a mapping file with Morph-RDB.</p>\n\n<p>N-Quads and N-Triples are currently supported as serialization\nformat for Morph-RDB. Only relational databases are supported by\nMorph-RDB, thus the relational database parameters are mandantory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mapping_file</strong> (str):\nPath to the mapping file to execute.</li>\n<li><strong>output_file</strong> (str):\nName of the output file to store the triples in.</li>\n<li><strong>serialization</strong> (str):\nSerialization format to use.</li>\n<li><strong>rdb_username</strong> (str):\nUsername for the database.</li>\n<li><strong>rdb_password</strong> (str):\nPassword for the database.</li>\n<li><strong>rdb_host</strong> (str):\nHostname for the database.</li>\n<li><strong>rdb_port</strong> (int):\nPort for the database.</li>\n<li><strong>rdb_name</strong> (str):\nDatabase name for the database.</li>\n<li><strong>rdb_type</strong> (str):\nDatabase type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">serialization</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.mysql": {"fullname": "bench_executor.mysql", "modulename": "bench_executor.mysql", "kind": "module", "doc": "<p>MySQL is an open-source relational database management system developed by\nOracle Corporation.</p>\n\n<p><strong>Website</strong>: <a href=\"https://www.mysql.com/\">https://www.mysql.com/</a><br>\n<strong>Repository</strong>: <a href=\"https://github.com/mysql/mysql-server\">https://github.com/mysql/mysql-server</a></p>\n"}, "bench_executor.mysql.MySQL": {"fullname": "bench_executor.mysql.MySQL", "modulename": "bench_executor.mysql", "qualname": "MySQL", "kind": "class", "doc": "<p>MySQL container for executing SQL queries.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.mysql.MySQL.__init__": {"fullname": "bench_executor.mysql.MySQL.__init__", "modulename": "bench_executor.mysql", "qualname": "MySQL.__init__", "kind": "function", "doc": "<p>Creates an instance of the MySQL class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.mysql.MySQL.initialization": {"fullname": "bench_executor.mysql.MySQL.initialization", "modulename": "bench_executor.mysql", "qualname": "MySQL.initialization", "kind": "function", "doc": "<p>Initialize MySQL's database.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the initialization was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.mysql.MySQL.root_mount_directory": {"fullname": "bench_executor.mysql.MySQL.root_mount_directory", "modulename": "bench_executor.mysql", "qualname": "MySQL.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for MySQL.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for MySQL.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.mysql.MySQL.wait_until_ready": {"fullname": "bench_executor.mysql.MySQL.wait_until_ready", "modulename": "bench_executor.mysql", "qualname": "MySQL.wait_until_ready", "kind": "function", "doc": "<p>Wait until MySQL is ready to execute SQL queries.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (str):\nCommand to execute in the MySQL container, optionally, defaults to\nno command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the MySQL was initialized successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.mysql.MySQL.load": {"fullname": "bench_executor.mysql.MySQL.load", "modulename": "bench_executor.mysql", "qualname": "MySQL.load", "kind": "function", "doc": "<p>Load a single CSV file into MySQL.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>csv_file</strong> (str):\nName of the CSV file.</li>\n<li><strong>table</strong> (str):\nName of the table.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">csv_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">table</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.mysql.MySQL.load_multiple": {"fullname": "bench_executor.mysql.MySQL.load_multiple", "modulename": "bench_executor.mysql", "qualname": "MySQL.load_multiple", "kind": "function", "doc": "<p>Load multiple CSV files into MySQL.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>csv_files</strong> (list):\nList of CSV files to load. Each entry consist of a <code>file</code> and\n<code>table</code> key.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">csv_files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.mysql.MySQL.load_sql_schema": {"fullname": "bench_executor.mysql.MySQL.load_sql_schema", "modulename": "bench_executor.mysql", "qualname": "MySQL.load_sql_schema", "kind": "function", "doc": "<p>Execute SQL schema with MySQL.</p>\n\n<p>Executes a .sql file with MySQL.\nIf the data is not loaded by the .sql file but only the schema is\nprovided through the .sql file, a list of CSV files can be provided to\nload them as well.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schema_file</strong> (str):\nName of the .sql file.</li>\n<li><strong>csv_files</strong> (List[Tuple[str, str]]):\nList of CSV file names to load in the tables created with the .sql\nfile, may also be an empty list. Each entry contains a Tuple with\nthe name of the CSV file and the table name.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">schema_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">csv_files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.mysql.MySQL.stop": {"fullname": "bench_executor.mysql.MySQL.stop", "modulename": "bench_executor.mysql", "qualname": "MySQL.stop", "kind": "function", "doc": "<p>Stop MySQL\nClears all tables and stops the MySQL container.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.notifier": {"fullname": "bench_executor.notifier", "modulename": "bench_executor.notifier", "kind": "module", "doc": "<p>This module holds the Notifier class which is responsible for notifying the\nuser remotely when the execution is finished, interrupted or failed.</p>\n"}, "bench_executor.notifier.Notifier": {"fullname": "bench_executor.notifier.Notifier", "modulename": "bench_executor.notifier", "qualname": "Notifier", "kind": "class", "doc": "<p>Notify user via e-mail when execution finished, or failed.</p>\n"}, "bench_executor.notifier.Notifier.__init__": {"fullname": "bench_executor.notifier.Notifier.__init__", "modulename": "bench_executor.notifier", "qualname": "Notifier.__init__", "kind": "function", "doc": "<p>Creates an instance of the Notifier class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>server</strong> (str):\nThe SMTP server domain name.</li>\n<li><strong>port</strong> (int):\nThe SMTP server port.</li>\n<li><strong>username</strong> (str):\nThe SMTP server username for sending an e-mail.</li>\n<li><strong>password</strong> (str):\nThe SMTP server password for sending an e-mail.</li>\n<li><strong>sender</strong> (str):\nThe e-mailaddress of the sender.</li>\n<li><strong>receiver</strong> (str):\nThe e-mailaddress of the receiver.</li>\n<li><strong>directory</strong> (str):\nThe path to the directory where the logs must be stored.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">server</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sender</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">receiver</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.notifier.Notifier.send": {"fullname": "bench_executor.notifier.Notifier.send", "modulename": "bench_executor.notifier", "qualname": "Notifier.send", "kind": "function", "doc": "<p>Send a notification via e-mail with a title and message.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>title</strong> (str):\nE-mail's subject</li>\n<li><strong>message</strong> (str):\nE-mail's body</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether sending the notification was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.ontop": {"fullname": "bench_executor.ontop", "modulename": "bench_executor.ontop", "kind": "module", "doc": "<p>Ontop is a Virtual Knowledge Graph system. It exposes the content of\narbitrary relational databases as knowledge graphs. These graphs are virtual,\nwhich means that data remains in the data sources instead of being moved\nto another database.</p>\n\n<p><strong>Website</strong>: <a href=\"https://ontop-vkg.org\">https://ontop-vkg.org</a><br>\n<strong>Repository</strong>: <a href=\"https://github.com/ontop/ontop\">https://github.com/ontop/ontop</a></p>\n"}, "bench_executor.ontop.Ontop": {"fullname": "bench_executor.ontop.Ontop", "modulename": "bench_executor.ontop", "qualname": "Ontop", "kind": "class", "doc": "<p>Ontop container super class for OntopMaterialize and OntopVirtualize.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.ontop.Ontop.__init__": {"fullname": "bench_executor.ontop.Ontop.__init__", "modulename": "bench_executor.ontop", "qualname": "Ontop.__init__", "kind": "function", "doc": "<p>Creates an instance of the Ontop class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>name</strong> (str):\nPretty name of the container.</li>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>logger</strong> (Logger):\nLogger to use for log messages.</li>\n<li><strong>mode</strong> (str):\nOntop mode: <code>materialize</code> or <code>endpoint</code></li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">logger</span><span class=\"p\">:</span> <span class=\"n\">bench_executor</span><span class=\"o\">.</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">Logger</span>,</span><span class=\"param\">\t<span class=\"n\">mode</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span>)</span>"}, "bench_executor.ontop.Ontop.root_mount_directory": {"fullname": "bench_executor.ontop.Ontop.root_mount_directory", "modulename": "bench_executor.ontop", "qualname": "Ontop.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for Ontop.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for Ontop.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.ontop.Ontop.endpoint": {"fullname": "bench_executor.ontop.Ontop.endpoint", "modulename": "bench_executor.ontop", "qualname": "Ontop.endpoint", "kind": "variable", "doc": "<p>SPARQL endpoint URL for Ontop.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>url</strong> (str):\nSPARQL endpoint URL.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.ontop.Ontop.headers": {"fullname": "bench_executor.ontop.Ontop.headers", "modulename": "bench_executor.ontop", "qualname": "Ontop.headers", "kind": "variable", "doc": "<p>HTTP headers of SPARQL queries for serialization formats.</p>\n\n<p>Only supported serialization formats are included in the dictionary.\nCurrently, the following formats are supported:</p>\n\n<ul>\n<li>N-Triples</li>\n<li>N-Quads</li>\n<li>Turtle</li>\n<li>CSV</li>\n<li>RDF/JSON</li>\n<li>RDF/XML</li>\n<li>JSON-LD</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>headers</strong> (dict):\nDictionary of headers to use for each serialization format.</li>\n</ul>\n", "annotation": ": dict"}, "bench_executor.ontop.OntopVirtualize": {"fullname": "bench_executor.ontop.OntopVirtualize", "modulename": "bench_executor.ontop", "qualname": "OntopVirtualize", "kind": "class", "doc": "<p>OntopVirtualize container for setting up an Ontop SPARQL endpoint.</p>\n", "bases": "Ontop"}, "bench_executor.ontop.OntopVirtualize.__init__": {"fullname": "bench_executor.ontop.OntopVirtualize.__init__", "modulename": "bench_executor.ontop", "qualname": "OntopVirtualize.__init__", "kind": "function", "doc": "<p>Creates an instance of the OntopVirtualize class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"fullname": "bench_executor.ontop.OntopVirtualize.execute_mapping", "modulename": "bench_executor.ontop", "qualname": "OntopVirtualize.execute_mapping", "kind": "function", "doc": "<p>Start an Ontop SPARQL endpoint with a mapping.</p>\n\n<p>Only relational databases are supported by\nOntop, thus the relational database parameters are mandantory.\nOntop SPARQL endpoint supports the following serialization formats:</p>\n\n<ul>\n<li>N-Triples (Ontop v5+)</li>\n<li>N-Quads (Ontop v5+)</li>\n<li>Turtle</li>\n<li>RDF/JSON</li>\n<li>JSON-LD</li>\n<li>CSV</li>\n</ul>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mapping_file</strong> (str):\nPath to the mapping file to execute.</li>\n<li><strong>serialization</strong> (str):\nSerialization format to use.</li>\n<li><strong>rdb_username</strong> (str):\nUsername for the database.</li>\n<li><strong>rdb_password</strong> (str):\nPassword for the database.</li>\n<li><strong>rdb_host</strong> (str):\nHostname for the database.</li>\n<li><strong>rdb_port</strong> (int):\nPort for the database.</li>\n<li><strong>rdb_name</strong> (str):\nDatabase name for the database.</li>\n<li><strong>rdb_type</strong> (str):\nDatabase type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">serialization</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.ontop.OntopMaterialize": {"fullname": "bench_executor.ontop.OntopMaterialize", "modulename": "bench_executor.ontop", "qualname": "OntopMaterialize", "kind": "class", "doc": "<p>OntopMaterialize container to execute a R2RML mapping.</p>\n", "bases": "Ontop"}, "bench_executor.ontop.OntopMaterialize.__init__": {"fullname": "bench_executor.ontop.OntopMaterialize.__init__", "modulename": "bench_executor.ontop", "qualname": "OntopMaterialize.__init__", "kind": "function", "doc": "<p>Creates an instance of the OntopMaterialize class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"fullname": "bench_executor.ontop.OntopMaterialize.execute_mapping", "modulename": "bench_executor.ontop", "qualname": "OntopMaterialize.execute_mapping", "kind": "function", "doc": "<p>Execute a R2RML mapping with Ontop</p>\n\n<p>N-Quads and N-Triples are currently supported as serialization\nfor Ontop materialize. Only relational databases are supported by\nOntop, thus the relational database parameters are mandantory.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mapping_file</strong> (str):\nPath to the mapping file to execute.</li>\n<li><strong>output_file</strong> (str):\nName of the output file to store the triples in. This is not used\nfor OntopVirtualize.</li>\n<li><strong>serialization</strong> (str):\nSerialization format to use.</li>\n<li><strong>rdb_username</strong> (str):\nUsername for the database.</li>\n<li><strong>rdb_password</strong> (str):\nPassword for the database.</li>\n<li><strong>rdb_host</strong> (str):\nHostname for the database.</li>\n<li><strong>rdb_port</strong> (int):\nPort for the database.</li>\n<li><strong>rdb_name</strong> (str):\nDatabase name for the database.</li>\n<li><strong>rdb_type</strong> (str):\nDatabase type.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">serialization</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_username</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_password</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_host</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_port</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_type</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.postgresql": {"fullname": "bench_executor.postgresql", "modulename": "bench_executor.postgresql", "kind": "module", "doc": "<p>PostgreSQL is an open-source relational database developed by The PostgreSQL\nGlobal Development Group.</p>\n\n<p><strong>Website</strong>: <a href=\"https://www.postgresql.org/\">https://www.postgresql.org/</a><br>\n<strong>Repository</strong>: <a href=\"https://git.postgresql.org/gitweb/?p=postgresql.git\">https://git.postgresql.org/gitweb/?p=postgresql.git</a></p>\n"}, "bench_executor.postgresql.PostgreSQL": {"fullname": "bench_executor.postgresql.PostgreSQL", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL", "kind": "class", "doc": "<p>PostgreSQL container for executing SQL queries</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.postgresql.PostgreSQL.__init__": {"fullname": "bench_executor.postgresql.PostgreSQL.__init__", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.__init__", "kind": "function", "doc": "<p>Creates an instance of the PostgreSQL class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.postgresql.PostgreSQL.initialization": {"fullname": "bench_executor.postgresql.PostgreSQL.initialization", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.initialization", "kind": "function", "doc": "<p>Initialize PostgreSQL's database.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the initialization was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"fullname": "bench_executor.postgresql.PostgreSQL.root_mount_directory", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for PostgreSQL.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for PostgreSQL.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"fullname": "bench_executor.postgresql.PostgreSQL.wait_until_ready", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.wait_until_ready", "kind": "function", "doc": "<p>Wait until PostgreSQL is ready to execute SQL queries.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (str):\nCommand to execute in the PostgreSQL container, optionally,\ndefaults to no command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the PostgreSQL was initialized successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.postgresql.PostgreSQL.load": {"fullname": "bench_executor.postgresql.PostgreSQL.load", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.load", "kind": "function", "doc": "<p>Load a single CSV file into PostgreSQL.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>csv_file</strong> (str):\nName of the CSV file.</li>\n<li><strong>table</strong> (str):\nName of the table.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">csv_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">table</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"fullname": "bench_executor.postgresql.PostgreSQL.load_multiple", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.load_multiple", "kind": "function", "doc": "<p>Load multiple CSV files into PostgreSQL.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>csv_files</strong> (list):\nList of CSV files to load. Each entry consist of a <code>file</code> and\n<code>table</code> key.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">csv_files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"fullname": "bench_executor.postgresql.PostgreSQL.load_sql_schema", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.load_sql_schema", "kind": "function", "doc": "<p>Execute SQL schema with PostgreSQL.</p>\n\n<p>Executes a .sql file with PostgreSQL.\nIf the data is not loaded by the .sql file but only the schema is\nprovided through the .sql file, a list of CSV files can be provided to\nload them as well.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>schema_file</strong> (str):\nName of the .sql file.</li>\n<li><strong>csv_files</strong> (List[Tuple[str, str]]]):\nList of CSV file names to load in the tables created with the .sql\nfile, may also be an empty list. Each entry contains a Tuple of the\nCSV file name and the table name.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">schema_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">csv_files</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">]]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.postgresql.PostgreSQL.stop": {"fullname": "bench_executor.postgresql.PostgreSQL.stop", "modulename": "bench_executor.postgresql", "qualname": "PostgreSQL.stop", "kind": "function", "doc": "<p>Stop PostgreSQL\nClears all tables and stops the PostgreSQL container.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.query": {"fullname": "bench_executor.query", "modulename": "bench_executor.query", "kind": "module", "doc": "<p>Query executes SPARQL queries on endpoints by posting the SPARQL query over\nHTTP onto the endpoint. It applies timeouts to these queries automatically and\nchecks if the results are empty or not.</p>\n"}, "bench_executor.query.Query": {"fullname": "bench_executor.query.Query", "modulename": "bench_executor.query", "qualname": "Query", "kind": "class", "doc": "<p>Execute a query on a SPARQL endpoint.</p>\n"}, "bench_executor.query.Query.__init__": {"fullname": "bench_executor.query.Query.__init__", "modulename": "bench_executor.query", "qualname": "Query.__init__", "kind": "function", "doc": "<p>Creates an instance of the Query class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.query.Query.name": {"fullname": "bench_executor.query.Query.name", "modulename": "bench_executor.query", "qualname": "Query.name", "kind": "variable", "doc": "<p>Name of the class: Query</p>\n"}, "bench_executor.query.Query.root_mount_directory": {"fullname": "bench_executor.query.Query.root_mount_directory", "modulename": "bench_executor.query", "qualname": "Query.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for Query.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for Query.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.query.Query.execute_and_save": {"fullname": "bench_executor.query.Query.execute_and_save", "modulename": "bench_executor.query", "qualname": "Query.execute_and_save", "kind": "function", "doc": "<p>Executes a SPARQL query and save the results.</p>\n\n<p>The results are saved to the <code>results_file</code> path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query</strong> (str):\nThe query to execute.</li>\n<li><strong>sparql_endpoint</strong> (str):\nThe URL of the SPARQL endpoint.</li>\n<li><strong>results_file</strong> (str):\nPath to the file where the results may be stored.</li>\n<li><strong>expect_empty</strong> (bool):\nWhether the expected results are empty or not.</li>\n<li><strong>headers</strong> (dict):\nHTTP headers to supply when posting the query.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution succeeded or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sparql_endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">results_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">expect_empty</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.query.Query.execute_from_file": {"fullname": "bench_executor.query.Query.execute_from_file", "modulename": "bench_executor.query", "qualname": "Query.execute_from_file", "kind": "function", "doc": "<p>Executes a SPARQL query from file.</p>\n\n<p>The results are saved to the <code>results_file</code> path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query_file</strong> (str):\nPath to the file containing the query.</li>\n<li><strong>sparql_endpoint</strong> (str):\nThe URL of the SPARQL endpoint.</li>\n<li><strong>expect_empty</strong> (bool):\nWhether the expected results are empty or not.</li>\n<li><strong>headers</strong> (dict):\nHTTP headers to supply when posting the query.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>results</strong> (str):\nThe HTTP response as string of the SPARQL endpoint, unless it has\nno results.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>Exception</strong> (Exception):\nPass through the exception from the Python's request module\nregarding HTTP status codes.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sparql_endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">expect_empty</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, "bench_executor.query.Query.execute_from_file_and_save": {"fullname": "bench_executor.query.Query.execute_from_file_and_save", "modulename": "bench_executor.query", "qualname": "Query.execute_from_file_and_save", "kind": "function", "doc": "<p>Executes a SPARQL query from file and save the results.</p>\n\n<p>The results are saved to the <code>results_file</code> path.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>query_file</strong> (str):\nPath to the file containing the query.</li>\n<li><strong>sparql_endpoint</strong> (str):\nThe URL of the SPARQL endpoint.</li>\n<li><strong>results_file</strong> (str):\nPath to the file where the results may be stored.</li>\n<li><strong>expect_empty</strong> (bool):\nWhether the expected results are empty or not.</li>\n<li><strong>headers</strong> (dict):\nHTTP headers to supply when posting the query.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution succeeded or not.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>FileNotFoundError</strong> (Exception):\nIf the query file cannot be found.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">query_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">sparql_endpoint</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">results_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">expect_empty</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">headers</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.rmlmapper": {"fullname": "bench_executor.rmlmapper", "modulename": "bench_executor.rmlmapper", "kind": "module", "doc": "<p>The RMLMapper executes RML rules to generate high quality Linked Data\nfrom multiple originally (semi-)structured data sources.</p>\n\n<p><strong>Website</strong>: <a href=\"https://rml.io\">https://rml.io</a><br>\n<strong>Repository</strong>: <a href=\"https://github.com/RMLio/rmlmapper-java\">https://github.com/RMLio/rmlmapper-java</a></p>\n"}, "bench_executor.rmlmapper.RMLMapper": {"fullname": "bench_executor.rmlmapper.RMLMapper", "modulename": "bench_executor.rmlmapper", "qualname": "RMLMapper", "kind": "class", "doc": "<p>RMLMapper container for executing R2RML and RML mappings.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.rmlmapper.RMLMapper.__init__": {"fullname": "bench_executor.rmlmapper.RMLMapper.__init__", "modulename": "bench_executor.rmlmapper", "qualname": "RMLMapper.__init__", "kind": "function", "doc": "<p>Creates an instance of the RMLMapper class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"fullname": "bench_executor.rmlmapper.RMLMapper.root_mount_directory", "modulename": "bench_executor.rmlmapper", "qualname": "RMLMapper.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for RMLMapper.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for RMLMapper.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.rmlmapper.RMLMapper.execute": {"fullname": "bench_executor.rmlmapper.RMLMapper.execute", "modulename": "bench_executor.rmlmapper", "qualname": "RMLMapper.execute", "kind": "function", "doc": "<p>Execute RMLMapper with given arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arguments</strong> (list):\nArguments to supply to RMLMapper.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution succeeded or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"fullname": "bench_executor.rmlmapper.RMLMapper.execute_mapping", "modulename": "bench_executor.rmlmapper", "qualname": "RMLMapper.execute_mapping", "kind": "function", "doc": "<p>Execute a mapping file with RMLMapper.</p>\n\n<p>N-Quads and N-Triples are currently supported as serialization\nformat for RMLMapper.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mapping_file</strong> (str):\nPath to the mapping file to execute.</li>\n<li><strong>output_file</strong> (str):\nName of the output file to store the triples in.</li>\n<li><strong>serialization</strong> (str):\nSerialization format to use.</li>\n<li><strong>rdb_username</strong> (Optional[str]):\nUsername for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_password</strong> (Optional[str]):\nPassword for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_host</strong> (Optional[str]):\nHostname for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_port</strong> (Optional[int]):\nPort for the database, required when a database is used as source.</li>\n<li><strong>rdb_name</strong> (Optional[str]):\nDatabase name for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_type</strong> (Optional[str]):\nDatabase type, required when a database is used as source.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">serialization</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_username</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_password</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_host</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_port</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.sdmrdfizer": {"fullname": "bench_executor.sdmrdfizer", "modulename": "bench_executor.sdmrdfizer", "kind": "module", "doc": "<p>SDM-RDFizer is an efficient RML-Compliant engine for knowledge graph\nconstruction.</p>\n\n<p><strong>Repository</strong>: <a href=\"https://github.com/SDM-TIB/SDM-RDFizer\">https://github.com/SDM-TIB/SDM-RDFizer</a></p>\n"}, "bench_executor.sdmrdfizer.SDMRDFizer": {"fullname": "bench_executor.sdmrdfizer.SDMRDFizer", "modulename": "bench_executor.sdmrdfizer", "qualname": "SDMRDFizer", "kind": "class", "doc": "<p>SDMRDFizer container for executing RML mappings.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"fullname": "bench_executor.sdmrdfizer.SDMRDFizer.__init__", "modulename": "bench_executor.sdmrdfizer", "qualname": "SDMRDFizer.__init__", "kind": "function", "doc": "<p>Creates an instance of the SDMRDFizer class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"fullname": "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory", "modulename": "bench_executor.sdmrdfizer", "qualname": "SDMRDFizer.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for SDM-RDFizer.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for SDM-RDFizer.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"fullname": "bench_executor.sdmrdfizer.SDMRDFizer.execute", "modulename": "bench_executor.sdmrdfizer", "qualname": "SDMRDFizer.execute", "kind": "function", "doc": "<p>Execute SDM-RDFizer with given arguments.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>arguments</strong> (list):\nArguments to supply to SDM-RDFizer.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution succeeded or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">arguments</span><span class=\"p\">:</span> <span class=\"nb\">list</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"fullname": "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping", "modulename": "bench_executor.sdmrdfizer", "qualname": "SDMRDFizer.execute_mapping", "kind": "function", "doc": "<p>Execute a mapping file with SDM-RDFizer.</p>\n\n<p>N-Quads and N-Triples are currently supported as serialization\nformat for RMLMapper.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>mapping_file</strong> (str):\nPath to the mapping file to execute.</li>\n<li><strong>output_file</strong> (str):\nName of the output file to store the triples in.</li>\n<li><strong>serialization</strong> (str):\nSerialization format to use.</li>\n<li><strong>rdb_username</strong> (Optional[str]):\nUsername for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_password</strong> (Optional[str]):\nPassword for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_host</strong> (Optional[str]):\nHostname for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_port</strong> (Optional[int]):\nPort for the database, required when a database is used as source.</li>\n<li><strong>rdb_name</strong> (Optional[str]):\nDatabase name for the database, required when a database is used as\nsource.</li>\n<li><strong>rdb_type</strong> (Optional[str]):\nDatabase type, required when a database is used as source.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the execution was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">output_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">serialization</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_username</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_password</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_host</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_port</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">rdb_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.stats": {"fullname": "bench_executor.stats", "modulename": "bench_executor.stats", "kind": "module", "doc": "<p>This module holds the Stats class which is responsible for generating\nstaticstics from executed cases. It will automatically aggregate all runs of an\nexecuted case to generate an <code>aggregated.csv</code> and <code>summary.csv</code> files which can\nbe used to compare various cases with each other.</p>\n\n<ul>\n<li><code>aggregated.csv</code>: For each run of a case, the median execution time of each\nstep is calculated. For each step, the results of the run with the median\nexecution time is used to assemble the aggregated results.</li>\n<li><code>summary.csv</code>: The summary is similar to the previous file, but provides a\nsingle result for each step to immediately see how long the step took, how\nmany samples are provided for the step, etc.</li>\n</ul>\n"}, "bench_executor.stats.Stats": {"fullname": "bench_executor.stats.Stats", "modulename": "bench_executor.stats", "qualname": "Stats", "kind": "class", "doc": "<p>Generate statistics for an executed case.</p>\n"}, "bench_executor.stats.Stats.__init__": {"fullname": "bench_executor.stats.Stats.__init__", "modulename": "bench_executor.stats", "qualname": "Stats.__init__", "kind": "function", "doc": "<p>Create an instance of the Stats class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>results_path</strong> (str):\nThe path to the results directory of the case</li>\n<li><strong>number_of_steps</strong> (int):\nThe number of steps of the case</li>\n<li><strong>directory</strong> (str):\nThe path to the directory where the logs must be stored.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">results_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">number_of_steps</span><span class=\"p\">:</span> <span class=\"nb\">int</span>,</span><span class=\"param\">\t<span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.stats.Stats.aggregate": {"fullname": "bench_executor.stats.Stats.aggregate", "modulename": "bench_executor.stats", "qualname": "Stats.aggregate", "kind": "function", "doc": "<p>Aggregate the metrics of the different runs of a case.</p>\n\n<p>Find the median execution time of each step across all runs and extract\nthe step from the run which has this median execution time to assemble\nan aggregated version and summary version of the case's metrics.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the aggregation was successfully or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.virtuoso": {"fullname": "bench_executor.virtuoso", "modulename": "bench_executor.virtuoso", "kind": "module", "doc": "<p>Virtuoso is a secure and high-performance platform for modern data access,\nintegration, virtualization, and multi-model data management (tables &amp; graphs)\nbased on innovative support of existing open standards\n(e.g., SQL, SPARQL, and GraphQL).</p>\n\n<p><strong>Website</strong>: <a href=\"https://virtuoso.openlinksw.com/\">https://virtuoso.openlinksw.com/</a><br>\n<strong>Repository</strong>: <a href=\"https://github.com/openlink/virtuoso-opensource\">https://github.com/openlink/virtuoso-opensource</a></p>\n"}, "bench_executor.virtuoso.Virtuoso": {"fullname": "bench_executor.virtuoso.Virtuoso", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso", "kind": "class", "doc": "<p>Virtuoso container to execute SPARQL queries</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.virtuoso.Virtuoso.__init__": {"fullname": "bench_executor.virtuoso.Virtuoso.__init__", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.__init__", "kind": "function", "doc": "<p>Creates an instance of the Virtuoso class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.virtuoso.Virtuoso.initialization": {"fullname": "bench_executor.virtuoso.Virtuoso.initialization", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.initialization", "kind": "function", "doc": "<p>Initialize Virtuoso's database.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the initialization was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"fullname": "bench_executor.virtuoso.Virtuoso.root_mount_directory", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for Virtuoso.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for Virtuoso.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"fullname": "bench_executor.virtuoso.Virtuoso.wait_until_ready", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.wait_until_ready", "kind": "function", "doc": "<p>Wait until Virtuoso is ready to execute SPARQL queries.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>command</strong> (str):\nCommand to execute in the Virtuoso container, optionally, defaults\nto no command.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the Virtuoso was initialized successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">command</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.virtuoso.Virtuoso.load": {"fullname": "bench_executor.virtuoso.Virtuoso.load", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.load", "kind": "function", "doc": "<p>Load an RDF file into Virtuoso.</p>\n\n<p>Currently, only N-Triples files are supported.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rdf_file</strong> (str):\nName of the RDF file to load.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the loading was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rdf_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"fullname": "bench_executor.virtuoso.Virtuoso.load_parallel", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.load_parallel", "kind": "function", "doc": "<p>Load an RDF file into Virtuoso in parallel.</p>\n\n<p>Currently, only N-Triples files are supported.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>rdf_file</strong> (str):\nName of the RDF file to load.</li>\n<li><strong>cores</strong> (int):\nNumber of CPU cores for loading.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the loading was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">rdf_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">cores</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.virtuoso.Virtuoso.stop": {"fullname": "bench_executor.virtuoso.Virtuoso.stop", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.stop", "kind": "function", "doc": "<p>Stop Virtuoso.</p>\n\n<p>Drops all triples in Virtuoso before stopping its container.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether stopping Virtuoso was successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, "bench_executor.virtuoso.Virtuoso.endpoint": {"fullname": "bench_executor.virtuoso.Virtuoso.endpoint", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.endpoint", "kind": "variable", "doc": "<p>SPARQL endpoint URL</p>\n", "annotation": ": str"}, "bench_executor.virtuoso.Virtuoso.headers": {"fullname": "bench_executor.virtuoso.Virtuoso.headers", "modulename": "bench_executor.virtuoso", "qualname": "Virtuoso.headers", "kind": "variable", "doc": "<p>HTTP headers of SPARQL queries for serialization formats.</p>\n\n<p>Only supported serialization formats are included in the dictionary.\nCurrently, the following formats are supported:</p>\n\n<ul>\n<li>N-Triples</li>\n<li>Turtle</li>\n<li>CSV</li>\n<li>RDF/JSON</li>\n<li>RDF/XML</li>\n<li>JSON-LD</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>headers</strong> (dict):\nDictionary of headers to use for each serialization format.</li>\n</ul>\n", "annotation": ": Dict[str, Dict[str, str]]"}, "bench_executor.yarrrml": {"fullname": "bench_executor.yarrrml", "modulename": "bench_executor.yarrrml", "kind": "module", "doc": "<p>YARRRML is a human readable text-based representation for declarative\nLinked Data generation rules.</p>\n\n<p><strong>Website</strong>: <a href=\"https://rml.io/yarrrml/\">https://rml.io/yarrrml/</a><br>\n<strong>Repository</strong>: <a href=\"https://github.com/RMLio/yarrrml-parser\">https://github.com/RMLio/yarrrml-parser</a></p>\n"}, "bench_executor.yarrrml.YARRRML": {"fullname": "bench_executor.yarrrml.YARRRML", "modulename": "bench_executor.yarrrml", "qualname": "YARRRML", "kind": "class", "doc": "<p>YARRRML container to transform YARRRML mappings into RML mappings.</p>\n", "bases": "bench_executor.container.Container"}, "bench_executor.yarrrml.YARRRML.__init__": {"fullname": "bench_executor.yarrrml.YARRRML.__init__", "modulename": "bench_executor.yarrrml", "qualname": "YARRRML.__init__", "kind": "function", "doc": "<p>Creates an instance of the YARRRML class.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>data_path</strong> (str):\nPath to the data directory of the case.</li>\n<li><strong>config_path</strong> (str):\nPath to the config directory of the case.</li>\n<li><strong>directory</strong> (str):\nPath to the directory to store logs.</li>\n<li><strong>verbose</strong> (bool):\nEnable verbose logs.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">data_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">config_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">directory</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">verbose</span><span class=\"p\">:</span> <span class=\"nb\">bool</span></span>)</span>"}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"fullname": "bench_executor.yarrrml.YARRRML.root_mount_directory", "modulename": "bench_executor.yarrrml", "qualname": "YARRRML.root_mount_directory", "kind": "variable", "doc": "<p>Subdirectory in the root directory of the case for YARRRML.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>subdirectory</strong> (str):\nSubdirectory of the root directory for YARRRML.</li>\n</ul>\n", "annotation": ": str"}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"fullname": "bench_executor.yarrrml.YARRRML.transform_mapping", "modulename": "bench_executor.yarrrml", "qualname": "YARRRML.transform_mapping", "kind": "function", "doc": "<p>Transform a YARRRML mapping into a RML mapping.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>yarrrml_file</strong> (str):\nName of the YARRRML mapping file.</li>\n<li><strong>mapping_file</strong> (str):\nName of the RML mapping file.</li>\n<li><strong>r2rml</strong> (bool):\nWhether the RML mapping file must be R2RML compatible.</li>\n<li><strong>pretty</strong> (bool):\nWhether the generated mapping file must be pretty or not.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>success</strong> (bool):\nWhether the YARRRML was initialized successfull or not.</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">yarrrml_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">mapping_file</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">r2rml</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">pretty</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}}, "docInfo": {"bench_executor.collector": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 470}, "bench_executor.collector.Collector": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 16}, "bench_executor.collector.Collector.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 276}, "bench_executor.collector.Collector.name": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "bench_executor.collector.Collector.next_step": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 29}, "bench_executor.collector.Collector.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 19}, "bench_executor.collector.scputimes": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 4}, "bench_executor.collector.scputimes.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "bench_executor.collector.sswap": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 4}, "bench_executor.collector.sswap.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "bench_executor.collector.svmem": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 4}, "bench_executor.collector.svmem.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "bench_executor.collector.sdiskio": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 4}, "bench_executor.collector.sdiskio.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "bench_executor.collector.snetio": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 2, "doc": 4}, "bench_executor.collector.snetio.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 8}, "bench_executor.container": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 50}, "bench_executor.container.ContainerManager": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "bench_executor.container.ContainerManager.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 10}, "bench_executor.container.ContainerManager.list_all": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 7}, "bench_executor.container.ContainerManager.stop_all": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 6}, "bench_executor.container.ContainerManager.create_network": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 21, "bases": 0, "doc": 25}, "bench_executor.container.Container": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 41}, "bench_executor.container.Container.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 108, "bases": 0, "doc": 87}, "bench_executor.container.Container.started": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "bench_executor.container.Container.name": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bench_executor.container.Container.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 44, "bases": 0, "doc": 96}, "bench_executor.container.Container.exec": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 40, "bases": 0, "doc": 71}, "bench_executor.container.Container.run_and_wait_for_log": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 45, "bases": 0, "doc": 101}, "bench_executor.container.Container.run_and_wait_for_exit": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 68}, "bench_executor.container.Container.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 41}, "bench_executor.executor": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 44}, "bench_executor.executor.Executor": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 8}, "bench_executor.executor.Executor.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 56, "bases": 0, "doc": 78}, "bench_executor.executor.Executor.main_directory": {"qualname": 3, "fullname": 6, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.executor.Executor.stats": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 70}, "bench_executor.executor.Executor.clean": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 65}, "bench_executor.executor.Executor.run": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 154}, "bench_executor.executor.Executor.list": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 61}, "bench_executor.fuseki": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 40}, "bench_executor.fuseki.Fuseki": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "bench_executor.fuseki.Fuseki.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.fuseki.Fuseki.initialization": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.fuseki.Fuseki.headers": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 76}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 62}, "bench_executor.fuseki.Fuseki.load": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 64}, "bench_executor.fuseki.Fuseki.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 39}, "bench_executor.fuseki.Fuseki.endpoint": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "bench_executor.__init__": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 18}, "bench_executor.logger": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 34}, "bench_executor.logger.Logger": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 11}, "bench_executor.logger.Logger.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 75}, "bench_executor.logger.Logger.verbose": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "bench_executor.logger.Logger.debug": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "bench_executor.logger.Logger.info": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "bench_executor.logger.Logger.warning": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "bench_executor.logger.Logger.error": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 9}, "bench_executor.morphkgc": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 50}, "bench_executor.morphkgc.MorphKGC": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 14}, "bench_executor.morphkgc.MorphKGC.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "bench_executor.morphkgc.MorphKGC.execute": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 51}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 219, "bases": 0, "doc": 333}, "bench_executor.morphrdb": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 49}, "bench_executor.morphrdb.MorphRDB": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 10}, "bench_executor.morphrdb.MorphRDB.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "bench_executor.morphrdb.MorphRDB.execute": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 53}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 122, "bases": 0, "doc": 195}, "bench_executor.mysql": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.mysql.MySQL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "bench_executor.mysql.MySQL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.mysql.MySQL.initialization": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "bench_executor.mysql.MySQL.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.mysql.MySQL.wait_until_ready": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 62}, "bench_executor.mysql.MySQL.load": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 65}, "bench_executor.mysql.MySQL.load_multiple": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 66}, "bench_executor.mysql.MySQL.load_sql_schema": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 140}, "bench_executor.mysql.MySQL.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 35}, "bench_executor.notifier": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 25}, "bench_executor.notifier.Notifier": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 13}, "bench_executor.notifier.Notifier.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 134}, "bench_executor.notifier.Notifier.send": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 66}, "bench_executor.ontop": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 59}, "bench_executor.ontop.Ontop": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "bench_executor.ontop.Ontop.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 60, "bases": 0, "doc": 77}, "bench_executor.ontop.Ontop.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.ontop.Ontop.endpoint": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "bench_executor.ontop.Ontop.headers": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 80}, "bench_executor.ontop.OntopVirtualize": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 12}, "bench_executor.ontop.OntopVirtualize.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 200}, "bench_executor.ontop.OntopMaterialize": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 1, "doc": 10}, "bench_executor.ontop.OntopMaterialize.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 122, "bases": 0, "doc": 197}, "bench_executor.postgresql": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 38}, "bench_executor.postgresql.PostgreSQL": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "bench_executor.postgresql.PostgreSQL.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.postgresql.PostgreSQL.initialization": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 62}, "bench_executor.postgresql.PostgreSQL.load": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 65}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 31, "bases": 0, "doc": 66}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 52, "bases": 0, "doc": 138}, "bench_executor.postgresql.PostgreSQL.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 35}, "bench_executor.query": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.query.Query": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 10}, "bench_executor.query.Query.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.query.Query.name": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 7}, "bench_executor.query.Query.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.query.Query.execute_and_save": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 87, "bases": 0, "doc": 132}, "bench_executor.query.Query.execute_from_file": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 76, "bases": 0, "doc": 152}, "bench_executor.query.Query.execute_from_file_and_save": {"qualname": 6, "fullname": 9, "annotation": 0, "default_value": 0, "signature": 88, "bases": 0, "doc": 160}, "bench_executor.rmlmapper": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 39}, "bench_executor.rmlmapper.RMLMapper": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 11}, "bench_executor.rmlmapper.RMLMapper.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.rmlmapper.RMLMapper.execute": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 49}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 200, "bases": 0, "doc": 226}, "bench_executor.sdmrdfizer": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 26}, "bench_executor.sdmrdfizer.SDMRDFizer": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 9}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 37}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 24, "bases": 0, "doc": 51}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 200, "bases": 0, "doc": 227}, "bench_executor.stats": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 138}, "bench_executor.stats.Stats": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 9}, "bench_executor.stats.Stats.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 80}, "bench_executor.stats.Stats.aggregate": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 75}, "bench_executor.virtuoso": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 58}, "bench_executor.virtuoso.Virtuoso": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 8}, "bench_executor.virtuoso.Virtuoso.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.virtuoso.Virtuoso.initialization": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 29}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"qualname": 4, "fullname": 7, "annotation": 0, "default_value": 0, "signature": 34, "bases": 0, "doc": 62}, "bench_executor.virtuoso.Virtuoso.load": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 25, "bases": 0, "doc": 64}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 35, "bases": 0, "doc": 80}, "bench_executor.virtuoso.Virtuoso.stop": {"qualname": 2, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 39}, "bench_executor.virtuoso.Virtuoso.endpoint": {"qualname": 2, "fullname": 5, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 5}, "bench_executor.virtuoso.Virtuoso.headers": {"qualname": 2, "fullname": 5, "annotation": 4, "default_value": 0, "signature": 0, "bases": 0, "doc": 76}, "bench_executor.yarrrml": {"qualname": 0, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.yarrrml.YARRRML": {"qualname": 1, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 12}, "bench_executor.yarrrml.YARRRML.__init__": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 46, "bases": 0, "doc": 77}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"qualname": 4, "fullname": 7, "annotation": 2, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"qualname": 3, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 75, "bases": 0, "doc": 106}}, "length": 146, "save": true}, "index": {"qualname": {"root": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 25, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.collector.Collector.stop": {"tf": 1}}, "df": 5}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}}, "df": 9, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.ContainerManager.create_network": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 25, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.logger.Logger.info": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"bench_executor.container.ContainerManager.create_network": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 3}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.started": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.stats.Stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 4}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 5}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.snetio": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.logger.Logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}}, "df": 7}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.container.Container.exec": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.executor.Executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}}, "df": 7}}, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 13}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.logger.Logger.error": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.warning": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}}, "df": 9}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.main_directory": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 11}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 5}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}}, "df": 5}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}}, "df": 9}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 12}}}}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.debug": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger.Logger.verbose": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 10}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}}, "df": 5, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}}, "df": 3}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}}, "df": 9}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 7}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 4}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 1}}}}}}}}}}}, "fullname": {"root": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 26, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 146}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.container.Container.exec": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.__init__": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.main_directory": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.stats": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.clean": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.run": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.list": {"tf": 1.7320508075688772}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 146}}, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 13}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}}, "df": 3}}}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.logger.Logger.error": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.name": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.next_step": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.stop": {"tf": 1.4142135623730951}, "bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}}, "df": 16}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container": {"tf": 1.4142135623730951}, "bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.Container.started": {"tf": 1.4142135623730951}, "bench_executor.container.Container.name": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.exec": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.4142135623730951}, "bench_executor.container.Container.stop": {"tf": 1.4142135623730951}}, "df": 15, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}}, "df": 5}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.ContainerManager.create_network": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 26, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.logger.Logger.info": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"bench_executor.container.ContainerManager.create_network": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 7}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.started": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 5}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.snetio": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}}, "df": 2}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}}, "df": 2}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.verbose": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.debug": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.info": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.warning": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.error": {"tf": 1.4142135623730951}}, "df": 8}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 4}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 11}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 6}}, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.warning": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 2}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.load": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.main_directory": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 7}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 11}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}}, "df": 6}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"bench_executor.morphrdb": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}}, "df": 6}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.initialization": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.stop": {"tf": 1.4142135623730951}}, "df": 10}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}}, "df": 2}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 12}}}}}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.debug": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 3}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 4}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger.Logger.verbose": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}}, "df": 11}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 12, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}}, "df": 3}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 3}}}}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 1}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.query": {"tf": 1}, "bench_executor.query.Query": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.query.Query.name": {"tf": 1.4142135623730951}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}}, "df": 8}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 5}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 1}}}}}}}}}}}, "annotation": {"root": {"docs": {"bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 20, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.container.Container.started": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.name": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 17}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.ontop.Ontop.headers": {"tf": 1}}, "df": 1, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"3": {"9": {"docs": {"bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.4142135623730951}}, "df": 7}, "docs": {}, "df": 0}, "docs": {"bench_executor.collector.Collector.__init__": {"tf": 7.615773105863909}, "bench_executor.collector.Collector.next_step": {"tf": 3.1622776601683795}, "bench_executor.collector.Collector.stop": {"tf": 3.1622776601683795}, "bench_executor.collector.scputimes.__init__": {"tf": 2}, "bench_executor.collector.sswap.__init__": {"tf": 2}, "bench_executor.collector.svmem.__init__": {"tf": 2}, "bench_executor.collector.sdiskio.__init__": {"tf": 2}, "bench_executor.collector.snetio.__init__": {"tf": 2}, "bench_executor.container.ContainerManager.__init__": {"tf": 2}, "bench_executor.container.ContainerManager.list_all": {"tf": 3.1622776601683795}, "bench_executor.container.ContainerManager.stop_all": {"tf": 3.1622776601683795}, "bench_executor.container.ContainerManager.create_network": {"tf": 4.242640687119285}, "bench_executor.container.Container.__init__": {"tf": 9.591663046625438}, "bench_executor.container.Container.run": {"tf": 6}, "bench_executor.container.Container.exec": {"tf": 5.744562646538029}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 6}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 5.291502622129181}, "bench_executor.container.Container.stop": {"tf": 3.4641016151377544}, "bench_executor.executor.Executor.__init__": {"tf": 6.557438524302}, "bench_executor.executor.Executor.stats": {"tf": 4.47213595499958}, "bench_executor.executor.Executor.clean": {"tf": 4.47213595499958}, "bench_executor.executor.Executor.run": {"tf": 6.6332495807108}, "bench_executor.executor.Executor.list": {"tf": 3.4641016151377544}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 6}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 3.4641016151377544}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 5.291502622129181}, "bench_executor.fuseki.Fuseki.load": {"tf": 4.47213595499958}, "bench_executor.fuseki.Fuseki.stop": {"tf": 3.4641016151377544}, "bench_executor.logger.Logger.__init__": {"tf": 5.291502622129181}, "bench_executor.logger.Logger.debug": {"tf": 3.7416573867739413}, "bench_executor.logger.Logger.info": {"tf": 3.7416573867739413}, "bench_executor.logger.Logger.warning": {"tf": 3.7416573867739413}, "bench_executor.logger.Logger.error": {"tf": 3.7416573867739413}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 6}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 4.47213595499958}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 13.228756555322953}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 6}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 4.47213595499958}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 9.695359714832659}, "bench_executor.mysql.MySQL.__init__": {"tf": 6}, "bench_executor.mysql.MySQL.initialization": {"tf": 3.4641016151377544}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 5.291502622129181}, "bench_executor.mysql.MySQL.load": {"tf": 5.291502622129181}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 5}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 6.4031242374328485}, "bench_executor.mysql.MySQL.stop": {"tf": 3.4641016151377544}, "bench_executor.notifier.Notifier.__init__": {"tf": 8.717797887081348}, "bench_executor.notifier.Notifier.send": {"tf": 5.291502622129181}, "bench_executor.ontop.Ontop.__init__": {"tf": 6.928203230275509}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 6}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 9.219544457292887}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 6}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 9.695359714832659}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 6}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 3.4641016151377544}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 5.291502622129181}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 5.291502622129181}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 5}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 6.4031242374328485}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 3.4641016151377544}, "bench_executor.query.Query.__init__": {"tf": 6}, "bench_executor.query.Query.execute_and_save": {"tf": 8.426149773176359}, "bench_executor.query.Query.execute_from_file": {"tf": 7.874007874011811}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 8.426149773176359}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 6}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 4.47213595499958}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 12.649110640673518}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 6}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 4.47213595499958}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 12.649110640673518}, "bench_executor.stats.Stats.__init__": {"tf": 6.324555320336759}, "bench_executor.stats.Stats.aggregate": {"tf": 3.4641016151377544}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 6}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 3.4641016151377544}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 5.291502622129181}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 4.47213595499958}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 5.291502622129181}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 3.4641016151377544}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 6}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 7.810249675906654}}, "df": 80, "r": {"2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 1}}}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 4}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1}}, "df": 1}}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 2}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 3}, "b": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 6}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}}, "df": 15}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 7}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 7, "s": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1.7320508075688772}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.notifier.Notifier.__init__": {"tf": 2.449489742783178}, "bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.query.Query.__init__": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_and_save": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 46}, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "f": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 55}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 6}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 11, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 6}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 17, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 5}}}}}, "n": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 10}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 5}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 17}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 9}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 13}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 17}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.7320508075688772}}, "df": 62}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 12}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 8}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 3}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 6}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}}, "df": 1, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}}, "df": 11}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}}, "df": 2}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}, "n": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 6}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 7}}}}}}, "s": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}}, "df": 4}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.Ontop.__init__": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}}, "df": 4}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 7}}}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 1}}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.snetio": {"tf": 1}}, "df": 5}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}}, "df": 10}}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.snetio": {"tf": 1}}, "df": 5}}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}}, "df": 10}}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.fuseki.Fuseki": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML": {"tf": 1.4142135623730951}}, "df": 10}}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}}, "df": 2}}}}}}}, "doc": {"root": {"0": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 2}, "docs": {"bench_executor.collector": {"tf": 13.416407864998739}, "bench_executor.collector.Collector": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.__init__": {"tf": 10.677078252031311}, "bench_executor.collector.Collector.name": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.next_step": {"tf": 2.449489742783178}, "bench_executor.collector.Collector.stop": {"tf": 2.449489742783178}, "bench_executor.collector.scputimes": {"tf": 1.7320508075688772}, "bench_executor.collector.scputimes.__init__": {"tf": 1.7320508075688772}, "bench_executor.collector.sswap": {"tf": 1.7320508075688772}, "bench_executor.collector.sswap.__init__": {"tf": 1.7320508075688772}, "bench_executor.collector.svmem": {"tf": 1.7320508075688772}, "bench_executor.collector.svmem.__init__": {"tf": 1.7320508075688772}, "bench_executor.collector.sdiskio": {"tf": 1.7320508075688772}, "bench_executor.collector.sdiskio.__init__": {"tf": 1.7320508075688772}, "bench_executor.collector.snetio": {"tf": 1.7320508075688772}, "bench_executor.collector.snetio.__init__": {"tf": 1.7320508075688772}, "bench_executor.container": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager.__init__": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager.list_all": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager.create_network": {"tf": 3.7416573867739413}, "bench_executor.container.Container": {"tf": 2.23606797749979}, "bench_executor.container.Container.__init__": {"tf": 6.244997998398398}, "bench_executor.container.Container.started": {"tf": 1.4142135623730951}, "bench_executor.container.Container.name": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run": {"tf": 6}, "bench_executor.container.Container.exec": {"tf": 5.744562646538029}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 6.164414002968976}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 4.58257569495584}, "bench_executor.container.Container.stop": {"tf": 4.123105625617661}, "bench_executor.executor": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.__init__": {"tf": 5.196152422706632}, "bench_executor.executor.Executor.main_directory": {"tf": 3.872983346207417}, "bench_executor.executor.Executor.stats": {"tf": 5.477225575051661}, "bench_executor.executor.Executor.clean": {"tf": 5.477225575051661}, "bench_executor.executor.Executor.run": {"tf": 6.928203230275509}, "bench_executor.executor.Executor.list": {"tf": 4.242640687119285}, "bench_executor.fuseki": {"tf": 3}, "bench_executor.fuseki.Fuseki": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 5.744562646538029}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 3.872983346207417}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.fuseki.Fuseki.headers": {"tf": 5.744562646538029}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 5.196152422706632}, "bench_executor.fuseki.Fuseki.load": {"tf": 5.477225575051661}, "bench_executor.fuseki.Fuseki.stop": {"tf": 4.242640687119285}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1.4142135623730951}, "bench_executor.__init__": {"tf": 1.7320508075688772}, "bench_executor.logger": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger.__init__": {"tf": 5.477225575051661}, "bench_executor.logger.Logger.verbose": {"tf": 3.872983346207417}, "bench_executor.logger.Logger.debug": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger.info": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger.warning": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger.error": {"tf": 1.7320508075688772}, "bench_executor.morphkgc": {"tf": 3.7416573867739413}, "bench_executor.morphkgc.MorphKGC": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 5.744562646538029}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 5.196152422706632}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 9.695359714832659}, "bench_executor.morphrdb": {"tf": 3.872983346207417}, "bench_executor.morphrdb.MorphRDB": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 5.744562646538029}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 5.196152422706632}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 8.831760866327848}, "bench_executor.mysql": {"tf": 3.7416573867739413}, "bench_executor.mysql.MySQL": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.__init__": {"tf": 5.744562646538029}, "bench_executor.mysql.MySQL.initialization": {"tf": 3.872983346207417}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 5.196152422706632}, "bench_executor.mysql.MySQL.load": {"tf": 5.744562646538029}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 5.5677643628300215}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 6}, "bench_executor.mysql.MySQL.stop": {"tf": 3.872983346207417}, "bench_executor.notifier": {"tf": 1.7320508075688772}, "bench_executor.notifier.Notifier": {"tf": 1.7320508075688772}, "bench_executor.notifier.Notifier.__init__": {"tf": 7.54983443527075}, "bench_executor.notifier.Notifier.send": {"tf": 5.5677643628300215}, "bench_executor.ontop": {"tf": 3.7416573867739413}, "bench_executor.ontop.Ontop": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.__init__": {"tf": 6}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.ontop.Ontop.endpoint": {"tf": 3.872983346207417}, "bench_executor.ontop.Ontop.headers": {"tf": 5.916079783099616}, "bench_executor.ontop.OntopVirtualize": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 5.744562646538029}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 9.433981132056603}, "bench_executor.ontop.OntopMaterialize": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 5.744562646538029}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 8.774964387392123}, "bench_executor.postgresql": {"tf": 3.7416573867739413}, "bench_executor.postgresql.PostgreSQL": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 5.744562646538029}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 3.872983346207417}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 5.196152422706632}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 5.744562646538029}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 5.5677643628300215}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 6}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 3.872983346207417}, "bench_executor.query": {"tf": 1.7320508075688772}, "bench_executor.query.Query": {"tf": 1.7320508075688772}, "bench_executor.query.Query.__init__": {"tf": 5.744562646538029}, "bench_executor.query.Query.name": {"tf": 1.4142135623730951}, "bench_executor.query.Query.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.query.Query.execute_and_save": {"tf": 7.483314773547883}, "bench_executor.query.Query.execute_from_file": {"tf": 7.874007874011811}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 8.246211251235321}, "bench_executor.rmlmapper": {"tf": 3.7416573867739413}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 5.744562646538029}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 5.196152422706632}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 8.831760866327848}, "bench_executor.sdmrdfizer": {"tf": 3}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 5.744562646538029}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 5.196152422706632}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 8.831760866327848}, "bench_executor.stats": {"tf": 4.58257569495584}, "bench_executor.stats.Stats": {"tf": 1.7320508075688772}, "bench_executor.stats.Stats.__init__": {"tf": 5.5677643628300215}, "bench_executor.stats.Stats.aggregate": {"tf": 4.242640687119285}, "bench_executor.virtuoso": {"tf": 3.7416573867739413}, "bench_executor.virtuoso.Virtuoso": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 5.744562646538029}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 3.872983346207417}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 5.196152422706632}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 5.477225575051661}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 6}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 4.242640687119285}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 5.744562646538029}, "bench_executor.yarrrml": {"tf": 3.7416573867739413}, "bench_executor.yarrrml.YARRRML": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 5.744562646538029}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 3.872983346207417}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 6.708203932499369}}, "df": 146, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor": {"tf": 1.7320508075688772}, "bench_executor.logger": {"tf": 1.4142135623730951}, "bench_executor.notifier": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 12}}, "e": {"docs": {"bench_executor.collector": {"tf": 3.1622776601683795}, "bench_executor.collector.Collector.__init__": {"tf": 3.7416573867739413}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.collector.Collector.next_step": {"tf": 2}, "bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.container": {"tf": 2}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 2.449489742783178}, "bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run": {"tf": 2.449489742783178}, "bench_executor.container.Container.exec": {"tf": 2.6457513110645907}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 2.8284271247461903}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 2.23606797749979}, "bench_executor.container.Container.stop": {"tf": 1.4142135623730951}, "bench_executor.executor": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.__init__": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.main_directory": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.stats": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.clean": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.run": {"tf": 3.1622776601683795}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 2.449489742783178}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.load": {"tf": 1.4142135623730951}, "bench_executor.logger": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger.__init__": {"tf": 2.6457513110645907}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 2.449489742783178}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 3.3166247903554}, "bench_executor.morphrdb": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 2.449489742783178}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 3.1622776601683795}, "bench_executor.mysql.MySQL.__init__": {"tf": 2.449489742783178}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 3.3166247903554}, "bench_executor.mysql.MySQL.stop": {"tf": 1.4142135623730951}, "bench_executor.notifier": {"tf": 1.7320508075688772}, "bench_executor.notifier.Notifier.__init__": {"tf": 3.4641016151377544}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 2}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 2.449489742783178}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 3}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 2.449489742783178}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 3.1622776601683795}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 2.449489742783178}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 3.1622776601683795}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1.4142135623730951}, "bench_executor.query": {"tf": 1.7320508075688772}, "bench_executor.query.Query.__init__": {"tf": 2.449489742783178}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_and_save": {"tf": 3.3166247903554}, "bench_executor.query.Query.execute_from_file": {"tf": 3.4641016151377544}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 3.605551275463989}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 2.449489742783178}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 3}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 3}, "bench_executor.stats": {"tf": 3.1622776601683795}, "bench_executor.stats.Stats.__init__": {"tf": 3}, "bench_executor.stats.Stats.aggregate": {"tf": 2.6457513110645907}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 2.449489742783178}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 2.449489742783178}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 2.23606797749979}}, "df": 98, "i": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}}, "df": 2}}, "y": {"docs": {"bench_executor.container": {"tf": 1}}, "df": 1}, "m": {"docs": {"bench_executor.container": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 3}, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop": {"tf": 1}, "bench_executor.query": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.ontop": {"tf": 1}}, "df": 4}, "n": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 5}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 3.4641016151377544}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 2}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.query": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"bench_executor.collector": {"tf": 2.449489742783178}, "bench_executor.collector.Collector.__init__": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.Container": {"tf": 1.7320508075688772}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1.7320508075688772}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 2}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.4142135623730951}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.clean": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 2.23606797749979}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 2}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 2}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2}, "bench_executor.mysql.MySQL.__init__": {"tf": 2}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 2}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 2}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 2}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 2}, "bench_executor.query.Query.execute_and_save": {"tf": 2}, "bench_executor.query.Query.execute_from_file": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 2}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 2}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 2}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2}, "bench_executor.stats": {"tf": 2.23606797749979}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 2}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 2}}, "df": 70, "o": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}, "k": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 14}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 4}}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.mysql.MySQL.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 6, "s": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}}, "df": 5}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1.4142135623730951}, "bench_executor.notifier": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 8}}}, "e": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}}, "df": 2, "r": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}, "l": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.morphrdb": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.7320508075688772}}, "df": 10, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}}, "df": 1}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.stop": {"tf": 1.7320508075688772}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.7320508075688772}, "bench_executor.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 9}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector": {"tf": 2.6457513110645907}, "bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"bench_executor.logger.Logger": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.ContainerManager": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.mysql": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 2.6457513110645907}}, "df": 10, "s": {"docs": {"bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "y": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 5}, "i": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1.7320508075688772}}, "df": 2}, "l": {"docs": {"bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.send": {"tf": 1.7320508075688772}}, "df": 3, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 2}}}}}}}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 7}}, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}}, "df": 6}}}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.stop": {"tf": 1.4142135623730951}}, "df": 11}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 5}}}, "w": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}}, "df": 2}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 7, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 6}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 3}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 7, "s": {"docs": {}, "df": 0, ":": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.morphkgc": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.postgresql": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "b": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 8}}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}}, "w": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "w": {"docs": {"bench_executor.mysql": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}}, "df": 2}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.rmlmapper": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 2}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.headers": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.7320508075688772}}, "df": 6}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.rmlmapper": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.__init__": {"tf": 1}}, "df": 2, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.name": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 5}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.stop": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 2}}}}}}}, "m": {"docs": {"bench_executor.mysql": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}}, "df": 2, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1, "d": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1.7320508075688772}, "bench_executor.container.Container.exec": {"tf": 2.23606797749979}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.7320508075688772}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.7320508075688772}}, "df": 9}}}}, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.mysql": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.rmlmapper": {"tf": 1}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 2}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.4142135623730951}}, "df": 2}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.mysql": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container": {"tf": 2}, "bench_executor.container.Container.__init__": {"tf": 2.6457513110645907}, "bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 2}, "bench_executor.container.Container.exec": {"tf": 1.7320508075688772}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 2}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 2}, "bench_executor.container.Container.stop": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}}, "df": 32, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container": {"tf": 1.4142135623730951}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"bench_executor.container": {"tf": 1.7320508075688772}, "bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 4}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}}, "df": 12, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger.Logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 2}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.container": {"tf": 1.4142135623730951}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 30, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.executor": {"tf": 1}}, "df": 2}}}}}, "i": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1.7320508075688772}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 2.23606797749979}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.clean": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.run": {"tf": 3}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 38, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.list": {"tf": 2.23606797749979}, "bench_executor.__init__": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}}, "df": 6}}}, "n": {"docs": {"bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 7, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 13}}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {"bench_executor.collector": {"tf": 3.3166247903554}, "bench_executor.collector.Collector.__init__": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 3}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 10, "s": {"docs": {"bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 17}, "d": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.container.Container": {"tf": 1}}, "df": 1}}}}}}, "b": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1, "s": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {"bench_executor.query": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "v": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 2}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 2}, "bench_executor.stats": {"tf": 2}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 12}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 12}}, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 11}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.7320508075688772}}, "df": 45}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 6}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 35}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 8}}, "r": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.warning": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 2}}, "df": 1, "s": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.logger": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 2}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}}, "df": 22}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 9}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.container": {"tf": 1}, "bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1.7320508075688772}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.logger": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.notifier": {"tf": 1.4142135623730951}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.stats": {"tf": 2}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 30}, "t": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 10, "s": {"docs": {"bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 3}}, "n": {"docs": {"bench_executor.collector": {"tf": 2.449489742783178}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.exec": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}}, "df": 40, "f": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.started": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.stop": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 3}}}}}}, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1.7320508075688772}}, "df": 3}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.notifier": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 25}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}}, "df": 4, "d": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 6}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}}, "df": 4}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}}, "d": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}, "/": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {"bench_executor.container.Container.started": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 8}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}}}}}}}, "r": {"2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 8}}}}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1, "s": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 2.449489742783178}, "bench_executor.query.Query.execute_from_file": {"tf": 2.23606797749979}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 2.449489742783178}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}}, "df": 9}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1, "s": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"bench_executor.collector": {"tf": 2.23606797749979}}, "df": 1, "s": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}, "y": {"docs": {"bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 4}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector": {"tf": 2.449489742783178}}, "df": 1}, "r": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 63}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.stop": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.notifier": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 9}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.mysql": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.postgresql": {"tf": 1}}, "df": 7}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 3}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 1}}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector": {"tf": 2}, "bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 2.23606797749979}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 2}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 10, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.stop": {"tf": 1}}, "df": 3}}}}, "s": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 4}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.rmlmapper": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.4142135623730951}}, "df": 14}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1.7320508075688772}, "bench_executor.morphkgc": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.7320508075688772}}, "df": 5, "/": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 4}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 3}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 4}}}}}, "b": {"2": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}, "docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.morphrdb": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 3}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 9, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.7320508075688772}}, "df": 8, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.rmlmapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 7}}}}}}}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 2}, "bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.logger": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.stats": {"tf": 2.23606797749979}, "bench_executor.stats.Stats": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}, "bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.4142135623730951}}, "df": 54, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 10, "s": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.headers": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.7320508075688772}}, "df": 4}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 5}}}, "s": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector": {"tf": 1.7320508075688772}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.mysql.MySQL.load": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 2.8284271247461903}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 2.8284271247461903}, "bench_executor.query.Query.execute_and_save": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file": {"tf": 2}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 2.6457513110645907}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.stats": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 2.449489742783178}}, "df": 23, "s": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.stats": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 9}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}}}}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {"bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1.7320508075688772}}, "df": 8}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 2.23606797749979}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 3}}}}, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {"bench_executor.collector": {"tf": 3.872983346207417}, "bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 2}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.main_directory": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 2}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 2}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 2}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 2}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 2}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 2}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 2}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 2}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 2}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.__init__": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 2}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 2}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.4142135623730951}}, "df": 31}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 10, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {"bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 3, "s": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 7}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.logger.Logger.debug": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.morphrdb": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}}, "df": 3}}, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.postgresql": {"tf": 1}}, "df": 1}}}}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 2.23606797749979}, "bench_executor.container": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}}, "df": 20, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 3.605551275463989}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 3.605551275463989}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 3.605551275463989}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}}, "df": 14, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 5}}}}}}}}}, "e": {"docs": {"bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 2}, "bench_executor.notifier.Notifier.send": {"tf": 1.7320508075688772}, "bench_executor.virtuoso": {"tf": 1}}, "df": 4, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 25, "s": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphrdb.MorphRDB": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}}, "df": 9}}}, "e": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.4142135623730951}}, "df": 27, "d": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.7320508075688772}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats": {"tf": 1}}, "df": 6}, "s": {"docs": {"bench_executor.executor.Executor": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}}, "df": 8}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.executor": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.__init__": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.stats": {"tf": 2.23606797749979}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 11}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.container": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.error": {"tf": 1}}, "df": 2, "s": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.list": {"tf": 1}}, "df": 2}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 17, "s": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}, "d": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "d": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}}, "df": 12, "s": {"docs": {"bench_executor.query": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 5}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}}}}}}}}, "t": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}}, "df": 6}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "f": {"docs": {"bench_executor.collector": {"tf": 4.47213595499958}, "bench_executor.collector.Collector": {"tf": 1}, "bench_executor.collector.Collector.__init__": {"tf": 3.605551275463989}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 2}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.main_directory": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 2.449489742783178}, "bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 2}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 2}, "bench_executor.query.Query.__init__": {"tf": 1.7320508075688772}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 2}, "bench_executor.stats.Stats.__init__": {"tf": 2.23606797749979}, "bench_executor.stats.Stats.aggregate": {"tf": 2}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 74}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"bench_executor.mysql": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}}, "df": 3, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "w": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 7}}, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.23606797749979}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 3}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 2.449489742783178}, "bench_executor.query": {"tf": 1}}, "df": 2}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "n": {"docs": {"bench_executor.query": {"tf": 1}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}}, "df": 3, "e": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.query": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}, "p": {"docs": {"bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.7320508075688772}}, "df": 8, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 12}}}, "r": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.container.Container": {"tf": 1.7320508075688772}, "bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 52, "g": {"docs": {"bench_executor.ontop": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}}, "df": 2, "/": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"2": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "?": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.postgresql": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql": {"tf": 1}}, "df": 2}}}}, "c": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.rmlmapper": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.executor": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "a": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container": {"tf": 2.23606797749979}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 2.23606797749979}, "bench_executor.executor.Executor.list": {"tf": 1.7320508075688772}, "bench_executor.fuseki": {"tf": 1.7320508075688772}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger": {"tf": 1}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 3}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.query.Query": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 48, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 4}}, "l": {"docs": {"bench_executor.collector": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 17, "o": {"docs": {}, "df": 0, "w": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.7320508075688772}}, "df": 3, "s": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.__init__": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.container.Container.started": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.container": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}}, "df": 23}, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.logger": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.__init__": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.stats": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 37, "d": {"docs": {"bench_executor.collector": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.__init__": {"tf": 2}, "bench_executor.container": {"tf": 2}, "bench_executor.container.ContainerManager": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.7320508075688772}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger": {"tf": 1}, "bench_executor.morphkgc": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.23606797749979}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.Ontop": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}, "bench_executor.virtuoso": {"tf": 1.7320508075688772}}, "df": 38}, "y": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}, "p": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 2}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.__init__": {"tf": 1}, "bench_executor.logger": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 6}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}}, "df": 2}}}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container.Container": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"bench_executor.container.Container": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.query": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.fuseki": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.6457513110645907}}, "df": 11, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 2, "d": {"docs": {"bench_executor.stats": {"tf": 1.7320508075688772}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 1}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1, "d": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.stats": {"tf": 1}}, "df": 4}, "s": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor.Executor.__init__": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 4}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 2}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 55}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 2.23606797749979}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 2.23606797749979}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 2.23606797749979}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 2.23606797749979}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 2.23606797749979}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 2.23606797749979}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 2.23606797749979}, "bench_executor.query.Query.__init__": {"tf": 2.23606797749979}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 2.23606797749979}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 2.23606797749979}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 2.23606797749979}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 2.23606797749979}}, "df": 27}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 2, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}}, "df": 7}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}}, "df": 7, "s": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.postgresql": {"tf": 2.23606797749979}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1.4142135623730951}}, "df": 11}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 4}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.logger": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "/": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "/": {"3": {"1": {"5": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}}}}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}, "g": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats": {"tf": 1}}, "df": 6, "d": {"docs": {"bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.yarrrml": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}}, "df": 7}, "s": {"docs": {"bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"bench_executor.postgresql": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.ontop": {"tf": 1}, "bench_executor.sdmrdfizer": {"tf": 1}}, "df": 2, "s": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.ontop": {"tf": 1.4142135623730951}, "bench_executor.virtuoso": {"tf": 1}}, "df": 3}, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.morphrdb": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.postgresql": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}}, "df": 8, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.run": {"tf": 1}}, "df": 3, "s": {"docs": {"bench_executor.collector.Collector": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 2}}, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 2, "d": {"docs": {"bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}}, "df": 3}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.collector.Collector.next_step": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.stats": {"tf": 2.23606797749979}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.morphkgc": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}}, "df": 3, "t": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}}, "df": 3, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.Container.started": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 3}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.executor.Executor.stats": {"tf": 2}, "bench_executor.stats.Stats": {"tf": 1}}, "df": 2}}}}}, "c": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}, "s": {"docs": {"bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}}, "df": 18, "d": {"docs": {"bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}}, "df": 6}}}, "p": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}, "bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager.stop_all": {"tf": 1}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 9, "s": {"docs": {"bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}}, "df": 3}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.ContainerManager.create_network": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.main_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.7320508075688772}, "bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 2.449489742783178}, "bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 2.6457513110645907}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 2.8284271247461903}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 1.7320508075688772}, "bench_executor.query.Query.root_mount_directory": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 59, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.rmlmapper": {"tf": 1}}, "df": 1}}}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 2.23606797749979}}, "df": 1}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1}}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.query": {"tf": 1.4142135623730951}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_from_file": {"tf": 2}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.7320508075688772}, "bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 19}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.fuseki": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.ontop": {"tf": 1}}, "df": 4}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.stats": {"tf": 1.7320508075688772}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 44, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1}}, "df": 31, "y": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.stats": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}}, "df": 7}}}}}}, "h": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1}}, "b": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.fuseki.Fuseki.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.7320508075688772}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.7320508075688772}}, "df": 11}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.4142135623730951}}, "df": 11}}, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}}, "df": 7}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.ontop.Ontop": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector": {"tf": 2}, "bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.collector": {"tf": 2.449489742783178}}, "df": 1}, "d": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1, "s": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.fuseki": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 2.23606797749979}}, "df": 4}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.headers": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1.7320508075688772}}, "df": 9}}}}}}}}}}}, "t": {"docs": {"bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.ontop.OntopVirtualize": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {"bench_executor.rmlmapper": {"tf": 1}}, "df": 1}}, "e": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector.stop": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 4}}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector.scputimes": {"tf": 1}, "bench_executor.collector.scputimes.__init__": {"tf": 1}}, "df": 2}}}}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.collector.sswap": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}}, "df": 2}}}}, "v": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"bench_executor.collector.svmem": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.sdiskio": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}}, "df": 2}}}}}, "m": {"docs": {"bench_executor.sdmrdfizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 4, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.sdmrdfizer.SDMRDFizer": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.collector.snetio": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}}, "df": 2}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.logger": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "p": {"docs": {"bench_executor.notifier.Notifier.__init__": {"tf": 2}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.mysql": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}}, "df": 5, "s": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.ontop": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}}, "df": 3}}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 2.449489742783178}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 2.449489742783178}, "bench_executor.virtuoso": {"tf": 1}}, "df": 8, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}, "n": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.Ontop.headers": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 12, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector": {"tf": 3.605551275463989}, "bench_executor.collector.Collector.__init__": {"tf": 2.449489742783178}, "bench_executor.collector.Collector.next_step": {"tf": 1.7320508075688772}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}}, "df": 6}}}}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"bench_executor.collector": {"tf": 4.123105625617661}, "bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {"bench_executor.collector.scputimes.__init__": {"tf": 1}, "bench_executor.collector.sswap.__init__": {"tf": 1}, "bench_executor.collector.svmem.__init__": {"tf": 1}, "bench_executor.collector.sdiskio.__init__": {"tf": 1}, "bench_executor.collector.snetio.__init__": {"tf": 1}}, "df": 5}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.collector.Collector.name": {"tf": 1}, "bench_executor.container.ContainerManager.create_network": {"tf": 1.4142135623730951}, "bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.Container.name": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.mysql.MySQL.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 23, "s": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}, "o": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 8, "t": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 49, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}}, "df": 2}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "y": {"docs": {"bench_executor.notifier.Notifier": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.notifier": {"tf": 1}}, "df": 1}}}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}, "v": {"2": {"docs": {"bench_executor.collector": {"tf": 1}}, "df": 1}, "5": {"docs": {"bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.collector": {"tf": 1.7320508075688772}, "bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.aggregate": {"tf": 1.4142135623730951}}, "df": 3}}}}, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.__init__": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.verbose": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}}, "df": 18}}}}}}, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.Container.stop": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.stats": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.notifier.Notifier": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 2}, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.ontop": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.virtuoso": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"bench_executor.virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1.7320508075688772}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1.7320508075688772}}, "df": 9}}}}}}}, "k": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.ontop": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1.7320508075688772}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 12, "r": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}, "bench_executor.notifier": {"tf": 1}, "bench_executor.notifier.Notifier": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1.4142135623730951}}, "df": 7}}}}}, "d": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1}, "bench_executor.executor": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 2.449489742783178}, "bench_executor.stats": {"tf": 1.4142135623730951}}, "df": 8}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}}, "df": 6}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 2, "s": {"docs": {"bench_executor.logger.Logger.__init__": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.query.Query.execute_from_file": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {"bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.ontop.OntopVirtualize": {"tf": 1}}, "df": 2, "m": {"docs": {"bench_executor.morphrdb": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}}, "df": 2}}}}}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.fuseki.Fuseki.endpoint": {"tf": 1}, "bench_executor.ontop.Ontop.endpoint": {"tf": 1.7320508075688772}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.endpoint": {"tf": 1}}, "df": 6}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "y": {"docs": {"bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}}, "df": 2}}, "g": {"docs": {}, "df": 0, "c": {"docs": {"bench_executor.morphkgc": {"tf": 1.7320508075688772}, "bench_executor.morphkgc.MorphKGC": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 2}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1.4142135623730951}}, "df": 6}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.morphkgc": {"tf": 1}, "bench_executor.ontop": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer": {"tf": 1}}, "df": 3}}}}}}}}}, "b": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.morphrdb": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.query": {"tf": 1}}, "df": 11, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.collector": {"tf": 2.8284271247461903}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.collector": {"tf": 1.4142135623730951}}, "df": 1}}, "t": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 3}}, "e": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}, "bench_executor.executor": {"tf": 1.4142135623730951}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_and_save": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.stats": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.4142135623730951}}, "df": 14, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}}, "df": 4}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}, "bench_executor.container.Container.run": {"tf": 1.4142135623730951}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}, "bench_executor.container.Container.stop": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.stats": {"tf": 1}, "bench_executor.executor.Executor.clean": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1.4142135623730951}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1}, "bench_executor.fuseki.Fuseki.initialization": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.fuseki.Fuseki.stop": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1}, "bench_executor.logger.Logger.verbose": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.mysql.MySQL.__init__": {"tf": 1}, "bench_executor.mysql.MySQL.initialization": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.mysql.MySQL.stop": {"tf": 1}, "bench_executor.notifier.Notifier.__init__": {"tf": 1}, "bench_executor.notifier.Notifier.send": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.initialization": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.stop": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.execute_and_save": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_from_file": {"tf": 1}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}, "bench_executor.stats.Stats.__init__": {"tf": 1}, "bench_executor.stats.Stats.aggregate": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.initialization": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.stop": {"tf": 1}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 1.7320508075688772}}, "df": 63}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.notifier.Notifier.send": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.container.Container.run": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.virtuoso": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_exit": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.executor.Executor.run": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.rmlmapper": {"tf": 1}, "bench_executor.yarrrml": {"tf": 1}}, "df": 2}}}, "e": {"docs": {"bench_executor.container.Container.run_and_wait_for_log": {"tf": 2}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"bench_executor.container": {"tf": 1}, "bench_executor.container.ContainerManager.list_all": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1}, "bench_executor.executor.Executor.list": {"tf": 2}, "bench_executor.morphkgc.MorphKGC.execute": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.7320508075688772}, "bench_executor.rmlmapper.RMLMapper.execute": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute": {"tf": 1}}, "df": 13, "[": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 2.23606797749979}, "bench_executor.logger.Logger": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}, "bench_executor.ontop.Ontop.__init__": {"tf": 1}}, "df": 8, "s": {"docs": {"bench_executor.collector.Collector.__init__": {"tf": 1.4142135623730951}, "bench_executor.container.Container": {"tf": 1}, "bench_executor.container.Container.__init__": {"tf": 1}, "bench_executor.container.Container.exec": {"tf": 1.4142135623730951}, "bench_executor.container.Container.run_and_wait_for_log": {"tf": 1}, "bench_executor.executor.Executor.__init__": {"tf": 1}, "bench_executor.executor.Executor.run": {"tf": 1}, "bench_executor.fuseki.Fuseki.__init__": {"tf": 1.4142135623730951}, "bench_executor.logger.Logger.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphkgc.MorphKGC.__init__": {"tf": 1.4142135623730951}, "bench_executor.morphrdb.MorphRDB.__init__": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.notifier.Notifier.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopVirtualize.__init__": {"tf": 1.4142135623730951}, "bench_executor.ontop.OntopMaterialize.__init__": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.__init__": {"tf": 1.4142135623730951}, "bench_executor.query.Query.__init__": {"tf": 1.4142135623730951}, "bench_executor.rmlmapper.RMLMapper.__init__": {"tf": 1.4142135623730951}, "bench_executor.sdmrdfizer.SDMRDFizer.__init__": {"tf": 1.4142135623730951}, "bench_executor.stats.Stats.__init__": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.__init__": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1.4142135623730951}}, "df": 22}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.container.Container.__init__": {"tf": 1.7320508075688772}, "bench_executor.logger": {"tf": 1}, "bench_executor.logger.Logger.__init__": {"tf": 1.7320508075688772}, "bench_executor.ontop.Ontop.__init__": {"tf": 1.7320508075688772}}, "df": 4, "s": {"docs": {"bench_executor.logger": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.executor.Executor.list": {"tf": 1}, "bench_executor.logger": {"tf": 1.7320508075688772}, "bench_executor.logger.Logger.verbose": {"tf": 1.4142135623730951}}, "df": 3}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"bench_executor.collector.Collector.next_step": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.container.Container.run": {"tf": 1}, "bench_executor.stats": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load": {"tf": 1}, "bench_executor.mysql.MySQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_multiple": {"tf": 1.4142135623730951}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.4142135623730951}}, "df": 9, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"bench_executor.fuseki.Fuseki.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.load_parallel": {"tf": 1.4142135623730951}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"bench_executor.mysql.MySQL.load_sql_schema": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.load_sql_schema": {"tf": 1}}, "df": 2}}}}}, "d": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 4}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.logger.Logger.debug": {"tf": 1}, "bench_executor.logger.Logger.info": {"tf": 1}, "bench_executor.logger.Logger.warning": {"tf": 1}, "bench_executor.logger.Logger.error": {"tf": 1}}, "df": 4}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc": {"tf": 1}}, "df": 1}}}}}}}}}, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.fuseki": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {"bench_executor.fuseki": {"tf": 1}, "bench_executor.rmlmapper": {"tf": 1}}, "df": 2}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 5}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.fuseki.Fuseki": {"tf": 1}, "bench_executor.fuseki.Fuseki.headers": {"tf": 1}, "bench_executor.fuseki.Fuseki.wait_until_ready": {"tf": 1}, "bench_executor.mysql.MySQL": {"tf": 1}, "bench_executor.mysql.MySQL.wait_until_ready": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.postgresql.PostgreSQL": {"tf": 1}, "bench_executor.postgresql.PostgreSQL.wait_until_ready": {"tf": 1}, "bench_executor.query": {"tf": 1.4142135623730951}, "bench_executor.virtuoso.Virtuoso": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.wait_until_ready": {"tf": 1}, "bench_executor.virtuoso.Virtuoso.headers": {"tf": 1}}, "df": 12}}}, "y": {"docs": {"bench_executor.query": {"tf": 1.4142135623730951}, "bench_executor.query.Query": {"tf": 1}, "bench_executor.query.Query.__init__": {"tf": 1}, "bench_executor.query.Query.name": {"tf": 1}, "bench_executor.query.Query.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.query.Query.execute_and_save": {"tf": 2}, "bench_executor.query.Query.execute_from_file": {"tf": 2}, "bench_executor.query.Query.execute_from_file_and_save": {"tf": 2.23606797749979}}, "df": 8}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}, "bench_executor.morphrdb.MorphRDB.execute_mapping": {"tf": 1}, "bench_executor.ontop.Ontop.headers": {"tf": 1}, "bench_executor.ontop.OntopVirtualize.execute_mapping": {"tf": 1}, "bench_executor.ontop.OntopMaterialize.execute_mapping": {"tf": 1}, "bench_executor.rmlmapper.RMLMapper.execute_mapping": {"tf": 1}, "bench_executor.sdmrdfizer.SDMRDFizer.execute_mapping": {"tf": 1}}, "df": 7}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"bench_executor.rmlmapper": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"bench_executor.__init__": {"tf": 1}, "bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.yarrrml": {"tf": 1}, "bench_executor.yarrrml.YARRRML": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.__init__": {"tf": 1}, "bench_executor.yarrrml.YARRRML.root_mount_directory": {"tf": 1.4142135623730951}, "bench_executor.yarrrml.YARRRML.transform_mapping": {"tf": 2}}, "df": 5}}}}}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"bench_executor.morphkgc.MorphKGC.execute_mapping": {"tf": 1}}, "df": 1}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();